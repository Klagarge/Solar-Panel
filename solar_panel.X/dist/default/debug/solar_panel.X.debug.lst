

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 24 14:17:41 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F97J60 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     _ADCON0	set	4034
    72   000000                     _ADRESL	set	4035
    73   000000                     _TRISJ	set	3994
    74   000000                     _TRISD	set	3989
    75   000000                     _TRISC	set	3988
    76   000000                     _TRISH	set	3993
    77   000000                     _TRISB	set	3987
    78   000000                     _TRISG	set	3992
    79   000000                     _TRISA	set	3986
    80   000000                     _TRISF	set	3991
    81   000000                     _TRISE	set	3990
    82   000000                     _LATH	set	3984
    83   000000                     _LATC	set	3979
    84   000000                     _LATG	set	3983
    85   000000                     _LATB	set	3978
    86   000000                     _LATF	set	3982
    87   000000                     _LATJ	set	3985
    88   000000                     _LATDbits	set	3980
    89   000000                     _TRISDbits	set	3989
    90   000000                     _ADCON0bits	set	4034
    91   000000                     _ADCON1	set	4033
    92   000000                     _LATA	set	3977
    93   000000                     _LATD	set	3980
    94   000000                     _LATE	set	3981
    95   000000                     _OSCTUNE	set	3995
    96   000000                     _OSCCON	set	4051
    97   000000                     _ADCON2	set	4032
    98   000000                     _ADCON1bits	set	4033
    99   000000                     _ADRESH	set	4036
   100                           
   101                           	psect	smallconst
   102   001000                     __psmallconst:
   103                           	callstack 0
   104   001000  00                 	db	0
   105   001001                     STR_1:
   106   001001  25                 	db	37
   107   001002  69                 	db	105	;'i'
   108   001003  00                 	db	0
   109   001004  00                 	db	0	; dummy byte at the end
   110   000000                     
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114   001B22                     __pcinit:
   115                           	callstack 0
   116   001B22                     start_initialization:
   117                           	callstack 0
   118   001B22                     __initialization:
   119                           	callstack 0
   120                           
   121                           ; Clear objects allocated to BANK0 (39 bytes)
   122   001B22  EE00  F060         	lfsr	0,__pbssBANK0
   123   001B26  0E27               	movlw	39
   124   001B28                     clear_0:
   125   001B28  6AEE               	clrf	postinc0,c
   126   001B2A  06E8               	decf	wreg,f,c
   127   001B2C  E1FD               	bnz	clear_0
   128                           
   129                           ; Clear objects allocated to COMRAM (1 bytes)
   130   001B2E  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   131   001B30                     end_of_initialization:
   132                           	callstack 0
   133   001B30                     __end_of__initialization:
   134                           	callstack 0
   135   001B30  0100               	movlb	0
   136   001B32  EF85  F00C         	goto	_main	;jump to C main() function
   137                           
   138                           	psect	bssCOMRAM
   139   00005F                     __pbssCOMRAM:
   140                           	callstack 0
   141   00005F                     _flags:
   142                           	callstack 0
   143   00005F                     	ds	1
   144                           
   145                           	psect	bssBANK0
   146   000060                     __pbssBANK0:
   147                           	callstack 0
   148   000060                     _ADC_InterruptHandler:
   149                           	callstack 0
   150   000060                     	ds	3
   151   000063                     _width:
   152                           	callstack 0
   153   000063                     	ds	2
   154   000065                     _prec:
   155                           	callstack 0
   156   000065                     	ds	2
   157   000067                     _dbuf:
   158                           	callstack 0
   159   000067                     	ds	32
   160                           
   161                           	psect	cstackBANK0
   162   000087                     __pcstackBANK0:
   163                           	callstack 0
   164   000087                     sprintf@ap:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x0
   168   000087                     	ds	2
   169   000089                     sprintf@f:
   170                           	callstack 0
   171                           
   172                           ; 11 bytes @ 0x2
   173   000089                     	ds	11
   174   000094                     main@value:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0xD
   178   000094                     	ds	2
   179   000096                     main@msg:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0xF
   183   000096                     	ds	2
   184                           
   185                           	psect	cstackCOMRAM
   186   000001                     __pcstackCOMRAM:
   187                           	callstack 0
   188   000001                     ??_LCD_2x16_WriteCmd:
   189   000001                     ??_LCD_2x16_WriteData:
   190   000001                     ?_ADC_GetConversion:
   191                           	callstack 0
   192   000001                     ?___aodiv:
   193                           	callstack 0
   194   000001                     ?___aomod:
   195                           	callstack 0
   196   000001                     fputc@c:
   197                           	callstack 0
   198   000001                     ___aodiv@dividend:
   199                           	callstack 0
   200   000001                     ___aomod@dividend:
   201                           	callstack 0
   202                           
   203                           ; 8 bytes @ 0x0
   204   000001                     	ds	1
   205   000002                     LCD_2x16_WriteCmd@command:
   206                           	callstack 0
   207   000002                     LCD_2x16_WriteData@command:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x1
   211   000002                     	ds	1
   212   000003                     ??_Lcd_Init:
   213   000003                     ??_ADC_GetConversion:
   214   000003                     LCD_2x16_WriteMsg@msg:
   215                           	callstack 0
   216   000003                     fputc@fp:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x2
   220   000003                     	ds	2
   221   000005                     ??_fputc:
   222   000005                     ADC_GetConversion@channel:
   223                           	callstack 0
   224   000005                     LCD_2x16_WriteMsg@line:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x4
   228   000005                     	ds	1
   229   000006                     
   230                           ; 1 bytes @ 0x5
   231   000006                     	ds	3
   232   000009                     ___aodiv@divisor:
   233                           	callstack 0
   234   000009                     ___aomod@divisor:
   235                           	callstack 0
   236                           
   237                           ; 8 bytes @ 0x8
   238   000009                     	ds	1
   239   00000A                     fputs@s:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x9
   243   00000A                     	ds	2
   244   00000C                     fputs@fp:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0xB
   248   00000C                     	ds	2
   249   00000E                     fputs@c:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0xD
   253   00000E                     	ds	1
   254   00000F                     fputs@i:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0xE
   258   00000F                     	ds	2
   259   000011                     ___aodiv@counter:
   260                           	callstack 0
   261   000011                     ___aomod@counter:
   262                           	callstack 0
   263   000011                     pad@fp:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x10
   267   000011                     	ds	1
   268   000012                     ___aodiv@sign:
   269                           	callstack 0
   270   000012                     ___aomod@sign:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x11
   274   000012                     	ds	1
   275   000013                     ?_abs:
   276                           	callstack 0
   277   000013                     pad@buf:
   278                           	callstack 0
   279   000013                     abs@a:
   280                           	callstack 0
   281   000013                     ___aodiv@quotient:
   282                           	callstack 0
   283                           
   284                           ; 8 bytes @ 0x12
   285   000013                     	ds	2
   286   000015                     ??_abs:
   287   000015                     pad@p:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x14
   291   000015                     	ds	2
   292   000017                     ??_pad:
   293                           
   294                           ; 1 bytes @ 0x16
   295   000017                     	ds	1
   296   000018                     pad@i:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x17
   300   000018                     	ds	2
   301   00001A                     pad@w:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x19
   305   00001A                     	ds	2
   306   00001C                     dtoa@fp:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x1B
   310   00001C                     	ds	2
   311   00001E                     dtoa@d:
   312                           	callstack 0
   313                           
   314                           ; 8 bytes @ 0x1D
   315   00001E                     	ds	8
   316   000026                     ??_dtoa:
   317                           
   318                           ; 1 bytes @ 0x25
   319   000026                     	ds	8
   320   00002E                     _dtoa$863:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x2D
   324   00002E                     	ds	2
   325   000030                     dtoa@p:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x2F
   329   000030                     	ds	2
   330   000032                     dtoa@w:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x31
   334   000032                     	ds	2
   335   000034                     dtoa@n:
   336                           	callstack 0
   337                           
   338                           ; 8 bytes @ 0x33
   339   000034                     	ds	8
   340   00003C                     dtoa@i:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x3B
   344   00003C                     	ds	2
   345   00003E                     dtoa@s:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x3D
   349   00003E                     	ds	1
   350   00003F                     vfpfcnvrt@fp:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x3E
   354   00003F                     	ds	2
   355   000041                     vfpfcnvrt@fmt:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x40
   359   000041                     	ds	2
   360   000043                     vfpfcnvrt@ap:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x42
   364   000043                     	ds	2
   365   000045                     ??_vfpfcnvrt:
   366                           
   367                           ; 1 bytes @ 0x44
   368   000045                     	ds	2
   369   000047                     vfpfcnvrt@convarg:
   370                           	callstack 0
   371                           
   372                           ; 8 bytes @ 0x46
   373   000047                     	ds	8
   374   00004F                     vfpfcnvrt@cp:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x4E
   378   00004F                     	ds	2
   379   000051                     ?_vfprintf:
   380                           	callstack 0
   381   000051                     vfprintf@fp:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x50
   385   000051                     	ds	2
   386   000053                     vfprintf@fmt:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x52
   390   000053                     	ds	2
   391   000055                     vfprintf@ap:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x54
   395   000055                     	ds	2
   396   000057                     vfprintf@cfmt:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x56
   400   000057                     	ds	2
   401   000059                     ?_sprintf:
   402                           	callstack 0
   403   000059                     sprintf@s:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x58
   407   000059                     	ds	2
   408   00005B                     sprintf@fmt:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x5A
   412   00005B                     	ds	4
   413   00005F                     
   414                           ; 1 bytes @ 0x5E
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 50 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  msg             2   15[BANK0 ] PTR unsigned char 
   425 ;;  value           2   13[BANK0 ] unsigned short 
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;Total ram usage:        4 bytes
   440 ;; Hardware stack levels required when called: 8
   441 ;; This function calls:
   442 ;;		_ADC_GetConversion
   443 ;;		_LCD_2x16_WriteMsg
   444 ;;		_Lcd_Init
   445 ;;		_SYSTEM_Initialize
   446 ;;		_sprintf
   447 ;; This function is called by:
   448 ;;		Startup code after reset
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text0
   453   00190A                     __ptext0:
   454                           	callstack 0
   455   00190A                     _main:
   456                           	callstack 23
   457   00190A                     
   458                           ;main.c: 53:     SYSTEM_Initialize();
   459   00190A  EC9B  F00D         	call	_SYSTEM_Initialize	;wreg free
   460   00190E                     
   461                           ;main.c: 55:     Lcd_Init();
   462   00190E  ECCC  F00C         	call	_Lcd_Init	;wreg free
   463   001912                     l1597:
   464                           
   465                           ;main.c: 74:     {;main.c: 75:         uint16_t value;;main.c: 77:         value = ADC_G
      +                          etConversion(voltage);
   466   001912  0E05               	movlw	5
   467   001914  EC4D  F00D         	call	_ADC_GetConversion
   468   001918  C001  F094         	movff	?_ADC_GetConversion,main@value
   469   00191C  C002  F095         	movff	?_ADC_GetConversion+1,main@value+1
   470   001920                     
   471                           ;main.c: 78:         char* msg;;main.c: 79:         sprintf(msg, "%i", value);
   472   001920  C096  F059         	movff	main@msg,sprintf@s
   473   001924  C097  F05A         	movff	main@msg+1,sprintf@s+1
   474   001928  0E01               	movlw	low STR_1
   475   00192A  6E5B               	movwf	sprintf@fmt^0,c
   476   00192C  0E10               	movlw	high STR_1
   477   00192E  6E5C               	movwf	(sprintf@fmt+1)^0,c
   478   001930  C094  F05D         	movff	main@value,?_sprintf+4
   479   001934  C095  F05E         	movff	main@value+1,?_sprintf+5
   480   001938  ECEE  F00C         	call	_sprintf	;wreg free
   481   00193C                     
   482                           ;main.c: 81:         LCD_2x16_WriteMsg(msg,0);
   483   00193C  C096  F003         	movff	main@msg,LCD_2x16_WriteMsg@msg
   484   001940  C097  F004         	movff	main@msg+1,LCD_2x16_WriteMsg@msg+1
   485   001944  0E00               	movlw	0
   486   001946  6E05               	movwf	LCD_2x16_WriteMsg@line^0,c
   487   001948  EC6A  F00D         	call	_LCD_2x16_WriteMsg	;wreg free
   488   00194C  EF89  F00C         	goto	l1597
   489   001950  EF01  F000         	goto	start
   490   001954                     __end_of_main:
   491                           	callstack 0
   492                           
   493 ;; *************** function _sprintf *****************
   494 ;; Defined at:
   495 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;  s               2   88[COMRAM] PTR unsigned char 
   498 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
   499 ;;		 -> STR_1(3), 
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  f              11    2[BANK0 ] struct _IO_FILE
   502 ;;  ap              2    0[BANK0 ] PTR void [1]
   503 ;;		 -> ?_sprintf(2), 
   504 ;;  ret             2    0        int 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  2   88[COMRAM] int 
   507 ;; Registers used:
   508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   514 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;      Totals:         6      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;Total ram usage:       19 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; Hardware stack levels required when called: 7
   521 ;; This function calls:
   522 ;;		_vfprintf
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text1
   529   0019DC                     __ptext1:
   530                           	callstack 0
   531   0019DC                     _sprintf:
   532                           	callstack 23
   533   0019DC  0E5D               	movlw	low (?_sprintf+4)
   534   0019DE  0100               	movlb	0	; () banked
   535   0019E0  6F87               	movwf	sprintf@ap& (0+255),b
   536   0019E2  0E00               	movlw	high (?_sprintf+4)
   537   0019E4  6F88               	movwf	(sprintf@ap+1)& (0+255),b
   538   0019E6  C059  F089         	movff	sprintf@s,sprintf@f
   539   0019EA  C05A  F08A         	movff	sprintf@s+1,sprintf@f+1
   540   0019EE                     
   541                           ; BSR set to: 0
   542   0019EE  0E00               	movlw	0
   543   0019F0  6F8D               	movwf	(sprintf@f+4)& (0+255),b
   544   0019F2  0E00               	movlw	0
   545   0019F4  6F8C               	movwf	(sprintf@f+3)& (0+255),b
   546   0019F6                     
   547                           ; BSR set to: 0
   548   0019F6  0E00               	movlw	0
   549   0019F8  6F93               	movwf	(sprintf@f+10)& (0+255),b
   550   0019FA  0E00               	movlw	0
   551   0019FC  6F92               	movwf	(sprintf@f+9)& (0+255),b
   552   0019FE                     
   553                           ; BSR set to: 0
   554   0019FE  0E89               	movlw	low sprintf@f
   555   001A00  6E51               	movwf	vfprintf@fp^0,c
   556   001A02  0E00               	movlw	high sprintf@f
   557   001A04  6E52               	movwf	(vfprintf@fp+1)^0,c
   558   001A06  C05B  F053         	movff	sprintf@fmt,vfprintf@fmt
   559   001A0A  C05C  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
   560   001A0E  0E87               	movlw	low sprintf@ap
   561   001A10  6E55               	movwf	vfprintf@ap^0,c
   562   001A12  0E00               	movlw	high sprintf@ap
   563   001A14  6E56               	movwf	(vfprintf@ap+1)^0,c
   564   001A16  EC35  F00C         	call	_vfprintf	;wreg free
   565   001A1A  0012               	return		;funcret
   566   001A1C                     __end_of_sprintf:
   567                           	callstack 0
   568                           
   569 ;; *************** function _vfprintf *****************
   570 ;; Defined at:
   571 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
   574 ;;		 -> sprintf@f(11), 
   575 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
   576 ;;		 -> STR_1(3), 
   577 ;;  ap              2   84[COMRAM] PTR PTR void 
   578 ;;		 -> sprintf@ap(2), 
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
   581 ;;		 -> STR_1(3), 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2   80[COMRAM] int 
   584 ;; Registers used:
   585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:        8 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; Hardware stack levels required when called: 6
   598 ;; This function calls:
   599 ;;		_vfpfcnvrt
   600 ;; This function is called by:
   601 ;;		_sprintf
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text2
   606   00186A                     __ptext2:
   607                           	callstack 0
   608   00186A                     _vfprintf:
   609                           	callstack 23
   610   00186A                     
   611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   612   00186A  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
   613   00186E  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   614                           
   615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   616   001872  EF49  F00C         	goto	l1539
   617   001876                     l1537:
   618                           
   619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   620   001876  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
   621   00187A  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   622   00187E  0E57               	movlw	low vfprintf@cfmt
   623   001880  6E41               	movwf	vfpfcnvrt@fmt^0,c
   624   001882  0E00               	movlw	high vfprintf@cfmt
   625   001884  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
   626   001886  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
   627   00188A  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   628   00188E  ECB7  F00A         	call	_vfpfcnvrt	;wreg free
   629   001892                     l1539:
   630                           
   631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   632   001892  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
   633   001896  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   634   00189A                     	if	0	;tblptru may be non-zero
   635   00189A                     	endif
   636   00189A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   637   00189A  0E00               	movlw	low (__mediumconst shr (0+16))
   638   00189C  6EF8               	movwf	tblptru,c
   639   00189E                     	endif
   640   00189E  0008               	tblrd		*
   641   0018A0  50F5               	movf	tablat,w,c
   642   0018A2  0900               	iorlw	0
   643   0018A4  A4D8               	btfss	status,2,c
   644   0018A6  EF57  F00C         	goto	u721
   645   0018AA  EF59  F00C         	goto	u720
   646   0018AE                     u721:
   647   0018AE  EF3B  F00C         	goto	l1537
   648   0018B2                     u720:
   649   0018B2                     
   650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   651   0018B2  0E00               	movlw	0
   652   0018B4  6E52               	movwf	(?_vfprintf+1)^0,c
   653   0018B6  0E00               	movlw	0
   654   0018B8  6E51               	movwf	?_vfprintf^0,c
   655   0018BA  0012               	return		;funcret
   656   0018BC                     __end_of_vfprintf:
   657                           	callstack 0
   658                           
   659 ;; *************** function _vfpfcnvrt *****************
   660 ;; Defined at:
   661 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
   664 ;;		 -> sprintf@f(11), 
   665 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
   666 ;;		 -> vfprintf@cfmt(2), 
   667 ;;  ap              2   66[COMRAM] PTR PTR void 
   668 ;;		 -> sprintf@ap(2), 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  convarg         8   70[COMRAM] struct .
   671 ;;  cp              2   78[COMRAM] PTR unsigned char 
   672 ;;		 -> STR_1(3), 
   673 ;;  i               2    0        int 
   674 ;;  done            2    0        int 
   675 ;;  c               1    0        unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   685 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;Total ram usage:       18 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 5
   692 ;; This function calls:
   693 ;;		_dtoa
   694 ;;		_fputc
   695 ;; This function is called by:
   696 ;;		_vfprintf
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text3
   701   00156E                     __ptext3:
   702                           	callstack 0
   703   00156E                     _vfpfcnvrt:
   704                           	callstack 23
   705   00156E                     
   706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
   707   00156E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   708   001572  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   709   001576  CFDE FFF6          	movff	postinc2,tblptrl
   710   00157A  CFDD FFF7          	movff	postdec2,tblptrh
   711   00157E                     	if	0	;tblptru may be non-zero
   712   00157E                     	endif
   713   00157E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   714   00157E  0E00               	movlw	low (__mediumconst shr (0+16))
   715   001580  6EF8               	movwf	tblptru,c
   716   001582                     	endif
   717   001582  0008               	tblrd		*
   718   001584  50F5               	movf	tablat,w,c
   719   001586  0A25               	xorlw	37
   720   001588  A4D8               	btfss	status,2,c
   721   00158A  EFC9  F00A         	goto	u691
   722   00158E  EFCB  F00A         	goto	u690
   723   001592                     u691:
   724   001592  EF4F  F00B         	goto	l1463
   725   001596                     u690:
   726   001596                     
   727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
   728   001596  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   729   00159A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   730   00159E  2ADE               	incf	postinc2,f,c
   731   0015A0  0E00               	movlw	0
   732   0015A2  22DD               	addwfc	postdec2,f,c
   733   0015A4                     
   734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
   735   0015A4  0E00               	movlw	0
   736   0015A6  0100               	movlb	0	; () banked
   737   0015A8  6F64               	movwf	(_width+1)& (0+255),b
   738   0015AA  0E00               	movlw	0
   739   0015AC  6F63               	movwf	_width& (0+255),b
   740   0015AE  C063  F05F         	movff	_width,_flags
   741   0015B2                     
   742                           ; BSR set to: 0
   743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
   744   0015B2  6965               	setf	_prec& (0+255),b
   745   0015B4  6966               	setf	(_prec+1)& (0+255),b
   746   0015B6                     
   747                           ; BSR set to: 0
   748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
   749   0015B6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   750   0015BA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   751   0015BE  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
   752   0015C2  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
   753   0015C6                     
   754                           ; BSR set to: 0
   755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   756   0015C6  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   757   0015CA  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   758   0015CE                     	if	0	;tblptru may be non-zero
   759   0015CE                     	endif
   760   0015CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   761   0015CE  0E00               	movlw	low (__mediumconst shr (0+16))
   762   0015D0  6EF8               	movwf	tblptru,c
   763   0015D2                     	endif
   764   0015D2  0008               	tblrd		*
   765   0015D4  50F5               	movf	tablat,w,c
   766   0015D6  0A64               	xorlw	100
   767   0015D8  B4D8               	btfsc	status,2,c
   768   0015DA  EFF1  F00A         	goto	u701
   769   0015DE  EFF3  F00A         	goto	u700
   770   0015E2                     u701:
   771   0015E2  EF03  F00B         	goto	l1453
   772   0015E6                     u700:
   773   0015E6                     
   774                           ; BSR set to: 0
   775   0015E6  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   776   0015EA  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   777   0015EE                     	if	0	;tblptru may be non-zero
   778   0015EE                     	endif
   779   0015EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   780   0015EE  0E00               	movlw	low (__mediumconst shr (0+16))
   781   0015F0  6EF8               	movwf	tblptru,c
   782   0015F2                     	endif
   783   0015F2  0008               	tblrd		*
   784   0015F4  50F5               	movf	tablat,w,c
   785   0015F6  0A69               	xorlw	105
   786   0015F8  A4D8               	btfss	status,2,c
   787   0015FA  EF01  F00B         	goto	u711
   788   0015FE  EF03  F00B         	goto	u710
   789   001602                     u711:
   790   001602  EF46  F00B         	goto	l1459
   791   001606                     u710:
   792   001606                     l1453:
   793                           
   794                           ; BSR set to: 0
   795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   796   001606  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   797   00160A  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   798   00160E  CFDF F045          	movff	indf2,??_vfpfcnvrt
   799   001612  0E02               	movlw	2
   800   001614  26DE               	addwf	postinc2,f,c
   801   001616  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
   802   00161A  0E00               	movlw	0
   803   00161C  22DD               	addwfc	postdec2,f,c
   804   00161E  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
   805   001622  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   806   001626  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
   807   00162A  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
   808   00162E  0E00               	movlw	0
   809   001630  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
   810   001632  0EFF               	movlw	-1
   811   001634  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
   812   001636  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
   813   001638  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
   814   00163A  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
   815   00163C  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
   816   00163E  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
   817                           
   818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
   819   001640  0E01               	movlw	1
   820   001642  244F               	addwf	vfpfcnvrt@cp^0,w,c
   821   001644  6E45               	movwf	??_vfpfcnvrt^0,c
   822   001646  0E00               	movlw	0
   823   001648  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
   824   00164A  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
   825   00164C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   826   001650  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   827   001654  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
   828   001658  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
   829   00165C                     
   830                           ; BSR set to: 0
   831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
   832   00165C  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
   833   001660  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   834   001664  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
   835   001668  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
   836   00166C  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
   837   001670  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
   838   001674  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
   839   001678  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
   840   00167C  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
   841   001680  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
   842   001684  EC03  F008         	call	_dtoa	;wreg free
   843   001688  EF65  F00B         	goto	l877
   844   00168C                     l1459:
   845                           
   846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
   847   00168C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   848   001690  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   849   001694  2ADE               	incf	postinc2,f,c
   850   001696  0E00               	movlw	0
   851   001698  22DD               	addwfc	postdec2,f,c
   852   00169A  EF65  F00B         	goto	l877
   853   00169E                     l1463:
   854                           
   855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
   856   00169E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   857   0016A2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   858   0016A6  CFDE FFF6          	movff	postinc2,tblptrl
   859   0016AA  CFDD FFF7          	movff	postdec2,tblptrh
   860   0016AE                     	if	0	;tblptru may be non-zero
   861   0016AE                     	endif
   862   0016AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   863   0016AE  0E00               	movlw	low (__mediumconst shr (0+16))
   864   0016B0  6EF8               	movwf	tblptru,c
   865   0016B2                     	endif
   866   0016B2  0008               	tblrd		*
   867   0016B4  50F5               	movf	tablat,w,c
   868   0016B6  6E01               	movwf	fputc@c^0,c
   869   0016B8  6A02               	clrf	(fputc@c+1)^0,c
   870   0016BA  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
   871   0016BE  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   872   0016C2  EC66  F00B         	call	_fputc	;wreg free
   873   0016C6  EF46  F00B         	goto	l1459
   874   0016CA                     l877:
   875   0016CA  0012               	return		;funcret
   876   0016CC                     __end_of_vfpfcnvrt:
   877                           	callstack 0
   878                           
   879 ;; *************** function _dtoa *****************
   880 ;; Defined at:
   881 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
   884 ;;		 -> sprintf@f(11), 
   885 ;;  d               8   29[COMRAM] long long 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  n               8   51[COMRAM] long long 
   888 ;;  i               2   59[COMRAM] int 
   889 ;;  w               2   49[COMRAM] int 
   890 ;;  p               2   47[COMRAM] int 
   891 ;;  s               1   61[COMRAM] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   901 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;Total ram usage:       35 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 4
   908 ;; This function calls:
   909 ;;		___aodiv
   910 ;;		___aomod
   911 ;;		_abs
   912 ;;		_pad
   913 ;; This function is called by:
   914 ;;		_vfpfcnvrt
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text4
   919   001006                     __ptext4:
   920                           	callstack 0
   921   001006                     _dtoa:
   922                           	callstack 23
   923   001006                     
   924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
   925   001006  C01E  F034         	movff	dtoa@d,dtoa@n
   926   00100A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
   927   00100E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
   928   001012  C021  F037         	movff	dtoa@d+3,dtoa@n+3
   929   001016  C022  F038         	movff	dtoa@d+4,dtoa@n+4
   930   00101A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
   931   00101E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
   932   001022  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
   933   001026                     
   934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
   935   001026  BE3B               	btfsc	(dtoa@n+7)^0,7,c
   936   001028  EF18  F008         	goto	u591
   937   00102C  EF1B  F008         	goto	u590
   938   001030                     u591:
   939   001030  0E01               	movlw	1
   940   001032  EF1C  F008         	goto	u600
   941   001036                     u590:
   942   001036  0E00               	movlw	0
   943   001038                     u600:
   944   001038  6E3E               	movwf	dtoa@s^0,c
   945   00103A                     
   946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
   947   00103A  503E               	movf	dtoa@s^0,w,c
   948   00103C  B4D8               	btfsc	status,2,c
   949   00103E  EF23  F008         	goto	u611
   950   001042  EF25  F008         	goto	u610
   951   001046                     u611:
   952   001046  EF35  F008         	goto	l1395
   953   00104A                     u610:
   954   00104A                     
   955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
   956   00104A  1E3B               	comf	(dtoa@n+7)^0,f,c
   957   00104C  1E3A               	comf	(dtoa@n+6)^0,f,c
   958   00104E  1E39               	comf	(dtoa@n+5)^0,f,c
   959   001050  1E38               	comf	(dtoa@n+4)^0,f,c
   960   001052  1E37               	comf	(dtoa@n+3)^0,f,c
   961   001054  1E36               	comf	(dtoa@n+2)^0,f,c
   962   001056  1E35               	comf	(dtoa@n+1)^0,f,c
   963   001058  6C34               	negf	dtoa@n^0,c
   964   00105A  0E00               	movlw	0
   965   00105C  2235               	addwfc	(dtoa@n+1)^0,f,c
   966   00105E  2236               	addwfc	(dtoa@n+2)^0,f,c
   967   001060  2237               	addwfc	(dtoa@n+3)^0,f,c
   968   001062  2238               	addwfc	(dtoa@n+4)^0,f,c
   969   001064  2239               	addwfc	(dtoa@n+5)^0,f,c
   970   001066  223A               	addwfc	(dtoa@n+6)^0,f,c
   971   001068  223B               	addwfc	(dtoa@n+7)^0,f,c
   972   00106A                     l1395:
   973                           
   974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
   975   00106A  0100               	movlb	0	; () banked
   976   00106C  BF66               	btfsc	(_prec+1)& (0+255),7,b
   977   00106E  EF43  F008         	goto	u620
   978   001072  5166               	movf	(_prec+1)& (0+255),w,b
   979   001074  E106               	bnz	u621
   980   001076  0565               	decf	_prec& (0+255),w,b
   981   001078  B0D8               	btfsc	status,0,c
   982   00107A  EF41  F008         	goto	u621
   983   00107E  EF43  F008         	goto	u620
   984   001082                     u621:
   985   001082  EF49  F008         	goto	l856
   986   001086                     u620:
   987   001086                     
   988                           ; BSR set to: 0
   989   001086  0E00               	movlw	0
   990   001088  6E31               	movwf	(dtoa@p+1)^0,c
   991   00108A  0E01               	movlw	1
   992   00108C  6E30               	movwf	dtoa@p^0,c
   993   00108E  EF4D  F008         	goto	l858
   994   001092                     l856:
   995                           
   996                           ; BSR set to: 0
   997   001092  C065  F030         	movff	_prec,dtoa@p
   998   001096  C066  F031         	movff	_prec+1,dtoa@p+1
   999   00109A                     l858:
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1003   00109A  C063  F032         	movff	_width,dtoa@w
  1004   00109E  C064  F033         	movff	_width+1,dtoa@w+1
  1005   0010A2                     
  1006                           ; BSR set to: 0
  1007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1008   0010A2  503E               	movf	dtoa@s^0,w,c
  1009   0010A4  B4D8               	btfsc	status,2,c
  1010   0010A6  EF57  F008         	goto	u631
  1011   0010AA  EF59  F008         	goto	u630
  1012   0010AE                     u631:
  1013   0010AE  EF70  F008         	goto	l859
  1014   0010B2                     u630:
  1015   0010B2                     
  1016                           ; BSR set to: 0
  1017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1018   0010B2  0632               	decf	dtoa@w^0,f,c
  1019   0010B4  A0D8               	btfss	status,0,c
  1020   0010B6  0633               	decf	(dtoa@w+1)^0,f,c
  1021   0010B8                     
  1022                           ; BSR set to: 0
  1023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1024   0010B8  503E               	movf	dtoa@s^0,w,c
  1025   0010BA  A4D8               	btfss	status,2,c
  1026   0010BC  EF62  F008         	goto	u641
  1027   0010C0  EF64  F008         	goto	u640
  1028   0010C4                     u641:
  1029   0010C4  EF6A  F008         	goto	l1407
  1030   0010C8                     u640:
  1031   0010C8                     
  1032                           ; BSR set to: 0
  1033   0010C8  0E00               	movlw	0
  1034   0010CA  6E2F               	movwf	(_dtoa$863+1)^0,c
  1035   0010CC  0E2B               	movlw	43
  1036   0010CE  6E2E               	movwf	_dtoa$863^0,c
  1037   0010D0  EF6E  F008         	goto	l1409
  1038   0010D4                     l1407:
  1039                           
  1040                           ; BSR set to: 0
  1041   0010D4  0E00               	movlw	0
  1042   0010D6  6E2F               	movwf	(_dtoa$863+1)^0,c
  1043   0010D8  0E2D               	movlw	45
  1044   0010DA  6E2E               	movwf	_dtoa$863^0,c
  1045   0010DC                     l1409:
  1046                           
  1047                           ; BSR set to: 0
  1048   0010DC  C02E  F03E         	movff	_dtoa$863,dtoa@s
  1049   0010E0                     l859:
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1053   0010E0  0E00               	movlw	0
  1054   0010E2  6E3D               	movwf	(dtoa@i+1)^0,c
  1055   0010E4  0E1F               	movlw	31
  1056   0010E6  6E3C               	movwf	dtoa@i^0,c
  1057   0010E8                     
  1058                           ; BSR set to: 0
  1059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1060   0010E8  0E00               	movlw	0
  1061   0010EA  6F86               	movwf	(_dbuf+31)& (0+255),b
  1062                           
  1063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1064   0010EC  EFF4  F008         	goto	l1423
  1065   0010F0                     l1413:
  1066                           
  1067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1068   0010F0  063C               	decf	dtoa@i^0,f,c
  1069   0010F2  A0D8               	btfss	status,0,c
  1070   0010F4  063D               	decf	(dtoa@i+1)^0,f,c
  1071   0010F6                     
  1072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1073   0010F6  0E67               	movlw	low _dbuf
  1074   0010F8  243C               	addwf	dtoa@i^0,w,c
  1075   0010FA  6ED9               	movwf	fsr2l,c
  1076   0010FC  0E00               	movlw	high _dbuf
  1077   0010FE  203D               	addwfc	(dtoa@i+1)^0,w,c
  1078   001100  6EDA               	movwf	fsr2h,c
  1079   001102  C034  F001         	movff	dtoa@n,___aomod@dividend
  1080   001106  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1081   00110A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1082   00110E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1083   001112  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1084   001116  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1085   00111A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1086   00111E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1087   001122  0E0A               	movlw	10
  1088   001124  6E09               	movwf	___aomod@divisor^0,c
  1089   001126  0E00               	movlw	0
  1090   001128  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1091   00112A  0E00               	movlw	0
  1092   00112C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1093   00112E  0E00               	movlw	0
  1094   001130  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1095   001132  0E00               	movlw	0
  1096   001134  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1097   001136  0E00               	movlw	0
  1098   001138  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1099   00113A  0E00               	movlw	0
  1100   00113C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1101   00113E  0E00               	movlw	0
  1102   001140  6E10               	movwf	(___aomod@divisor+7)^0,c
  1103   001142  EC05  F00A         	call	___aomod	;wreg free
  1104   001146  C001  F026         	movff	?___aomod,??_dtoa
  1105   00114A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1106   00114E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1107   001152  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1108   001156  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1109   00115A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1110   00115E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1111   001162  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1112   001166  C026  F013         	movff	??_dtoa,abs@a
  1113   00116A  C027  F014         	movff	??_dtoa+1,abs@a+1
  1114   00116E  EC0E  F00D         	call	_abs	;wreg free
  1115   001172  5013               	movf	?_abs^0,w,c
  1116   001174  0F30               	addlw	48
  1117   001176  6EDF               	movwf	indf2,c
  1118   001178                     
  1119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1120   001178  0630               	decf	dtoa@p^0,f,c
  1121   00117A  A0D8               	btfss	status,0,c
  1122   00117C  0631               	decf	(dtoa@p+1)^0,f,c
  1123   00117E                     
  1124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1125   00117E  0632               	decf	dtoa@w^0,f,c
  1126   001180  A0D8               	btfss	status,0,c
  1127   001182  0633               	decf	(dtoa@w+1)^0,f,c
  1128   001184                     
  1129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1130   001184  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1131   001188  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1132   00118C  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1133   001190  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1134   001194  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1135   001198  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1136   00119C  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1137   0011A0  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1138   0011A4  0E0A               	movlw	10
  1139   0011A6  6E09               	movwf	___aodiv@divisor^0,c
  1140   0011A8  0E00               	movlw	0
  1141   0011AA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1142   0011AC  0E00               	movlw	0
  1143   0011AE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1144   0011B0  0E00               	movlw	0
  1145   0011B2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1146   0011B4  0E00               	movlw	0
  1147   0011B6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1148   0011B8  0E00               	movlw	0
  1149   0011BA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1150   0011BC  0E00               	movlw	0
  1151   0011BE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1152   0011C0  0E00               	movlw	0
  1153   0011C2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1154   0011C4  EC41  F009         	call	___aodiv	;wreg free
  1155   0011C8  C001  F034         	movff	?___aodiv,dtoa@n
  1156   0011CC  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1157   0011D0  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1158   0011D4  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1159   0011D8  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1160   0011DC  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1161   0011E0  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1162   0011E4  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1163   0011E8                     l1423:
  1164                           
  1165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1166   0011E8  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1167   0011EA  EFFF  F008         	goto	u651
  1168   0011EE  503D               	movf	(dtoa@i+1)^0,w,c
  1169   0011F0  E108               	bnz	u650
  1170   0011F2  043C               	decf	dtoa@i^0,w,c
  1171   0011F4  A0D8               	btfss	status,0,c
  1172   0011F6  EFFF  F008         	goto	u651
  1173   0011FA  EF01  F009         	goto	u650
  1174   0011FE                     u651:
  1175   0011FE  EF1D  F009         	goto	l1429
  1176   001202                     u650:
  1177   001202  5034               	movf	dtoa@n^0,w,c
  1178   001204  1035               	iorwf	(dtoa@n+1)^0,w,c
  1179   001206  1036               	iorwf	(dtoa@n+2)^0,w,c
  1180   001208  1037               	iorwf	(dtoa@n+3)^0,w,c
  1181   00120A  1038               	iorwf	(dtoa@n+4)^0,w,c
  1182   00120C  1039               	iorwf	(dtoa@n+5)^0,w,c
  1183   00120E  103A               	iorwf	(dtoa@n+6)^0,w,c
  1184   001210  103B               	iorwf	(dtoa@n+7)^0,w,c
  1185   001212  A4D8               	btfss	status,2,c
  1186   001214  EF0E  F009         	goto	u661
  1187   001218  EF10  F009         	goto	u660
  1188   00121C                     u661:
  1189   00121C  EF78  F008         	goto	l1413
  1190   001220                     u660:
  1191   001220  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1192   001222  EF1D  F009         	goto	u670
  1193   001226  5031               	movf	(dtoa@p+1)^0,w,c
  1194   001228  E106               	bnz	u671
  1195   00122A  0430               	decf	dtoa@p^0,w,c
  1196   00122C  B0D8               	btfsc	status,0,c
  1197   00122E  EF1B  F009         	goto	u671
  1198   001232  EF1D  F009         	goto	u670
  1199   001236                     u671:
  1200   001236  EF78  F008         	goto	l1413
  1201   00123A                     u670:
  1202   00123A                     l1429:
  1203                           
  1204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1205   00123A  503E               	movf	dtoa@s^0,w,c
  1206   00123C  B4D8               	btfsc	status,2,c
  1207   00123E  EF23  F009         	goto	u681
  1208   001242  EF25  F009         	goto	u680
  1209   001246                     u681:
  1210   001246  EF30  F009         	goto	l1435
  1211   00124A                     u680:
  1212   00124A                     
  1213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1214   00124A  063C               	decf	dtoa@i^0,f,c
  1215   00124C  A0D8               	btfss	status,0,c
  1216   00124E  063D               	decf	(dtoa@i+1)^0,f,c
  1217   001250                     
  1218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1219   001250  0E67               	movlw	low _dbuf
  1220   001252  243C               	addwf	dtoa@i^0,w,c
  1221   001254  6ED9               	movwf	fsr2l,c
  1222   001256  0E00               	movlw	high _dbuf
  1223   001258  203D               	addwfc	(dtoa@i+1)^0,w,c
  1224   00125A  6EDA               	movwf	fsr2h,c
  1225   00125C  C03E  FFDF         	movff	dtoa@s,indf2
  1226   001260                     l1435:
  1227                           
  1228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1229   001260  C01C  F011         	movff	dtoa@fp,pad@fp
  1230   001264  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1231   001268  0E67               	movlw	low _dbuf
  1232   00126A  243C               	addwf	dtoa@i^0,w,c
  1233   00126C  6E13               	movwf	pad@buf^0,c
  1234   00126E  0E00               	movlw	high _dbuf
  1235   001270  203D               	addwfc	(dtoa@i+1)^0,w,c
  1236   001272  6E14               	movwf	(pad@buf+1)^0,c
  1237   001274  C032  F015         	movff	dtoa@w,pad@p
  1238   001278  C033  F016         	movff	dtoa@w+1,pad@p+1
  1239   00127C  ECCB  F00B         	call	_pad	;wreg free
  1240   001280  0012               	return		;funcret
  1241   001282                     __end_of_dtoa:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _pad *****************
  1245 ;; Defined at:
  1246 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1249 ;;		 -> sprintf@f(11), 
  1250 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1251 ;;		 -> dbuf(32), 
  1252 ;;  p               2   20[COMRAM] int 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  w               2   25[COMRAM] int 
  1255 ;;  i               2   23[COMRAM] int 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1265 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;Total ram usage:       11 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; Hardware stack levels required when called: 3
  1272 ;; This function calls:
  1273 ;;		_fputc
  1274 ;;		_fputs
  1275 ;; This function is called by:
  1276 ;;		_dtoa
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text5
  1281   001796                     __ptext5:
  1282                           	callstack 0
  1283   001796                     _pad:
  1284                           	callstack 23
  1285   001796                     
  1286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1287   001796  BE16               	btfsc	(pad@p+1)^0,7,c
  1288   001798  EFD0  F00B         	goto	u561
  1289   00179C  EFD2  F00B         	goto	u560
  1290   0017A0                     u561:
  1291   0017A0  EFD8  F00B         	goto	l1373
  1292   0017A4                     u560:
  1293   0017A4  C015  F01A         	movff	pad@p,pad@w
  1294   0017A8  C016  F01B         	movff	pad@p+1,pad@w+1
  1295   0017AC  EFDC  F00B         	goto	l847
  1296   0017B0                     l1373:
  1297   0017B0  0E00               	movlw	0
  1298   0017B2  6E1B               	movwf	(pad@w+1)^0,c
  1299   0017B4  0E00               	movlw	0
  1300   0017B6  6E1A               	movwf	pad@w^0,c
  1301   0017B8                     l847:
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1304   0017B8  0E00               	movlw	0
  1305   0017BA  6E19               	movwf	(pad@i+1)^0,c
  1306   0017BC  0E00               	movlw	0
  1307   0017BE  6E18               	movwf	pad@i^0,c
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1310   0017C0  EFEE  F00B         	goto	l1379
  1311   0017C4                     l1375:
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1314   0017C4  0E00               	movlw	0
  1315   0017C6  6E02               	movwf	(fputc@c+1)^0,c
  1316   0017C8  0E20               	movlw	32
  1317   0017CA  6E01               	movwf	fputc@c^0,c
  1318   0017CC  C011  F003         	movff	pad@fp,fputc@fp
  1319   0017D0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1320   0017D4  EC66  F00B         	call	_fputc	;wreg free
  1321   0017D8                     
  1322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1323   0017D8  4A18               	infsnz	pad@i^0,f,c
  1324   0017DA  2A19               	incf	(pad@i+1)^0,f,c
  1325   0017DC                     l1379:
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1328   0017DC  501A               	movf	pad@w^0,w,c
  1329   0017DE  5C18               	subwf	pad@i^0,w,c
  1330   0017E0  5019               	movf	(pad@i+1)^0,w,c
  1331   0017E2  0A80               	xorlw	128
  1332   0017E4  6E17               	movwf	??_pad^0,c
  1333   0017E6  501B               	movf	(pad@w+1)^0,w,c
  1334   0017E8  0A80               	xorlw	128
  1335   0017EA  5817               	subwfb	??_pad^0,w,c
  1336   0017EC  A0D8               	btfss	status,0,c
  1337   0017EE  EFFB  F00B         	goto	u571
  1338   0017F2  EFFD  F00B         	goto	u570
  1339   0017F6                     u571:
  1340   0017F6  EFE2  F00B         	goto	l1375
  1341   0017FA                     u570:
  1342   0017FA                     
  1343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1344   0017FA  C013  F00A         	movff	pad@buf,fputs@s
  1345   0017FE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1346   001802  C011  F00C         	movff	pad@fp,fputs@fp
  1347   001806  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1348   00180A  ECAA  F00C         	call	_fputs	;wreg free
  1349   00180E  0012               	return		;funcret
  1350   001810                     __end_of_pad:
  1351                           	callstack 0
  1352                           
  1353 ;; *************** function _fputs *****************
  1354 ;; Defined at:
  1355 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1358 ;;		 -> dbuf(32), 
  1359 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1360 ;;		 -> sprintf@f(11), 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  i               2   14[COMRAM] int 
  1363 ;;  c               1   13[COMRAM] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2    9[COMRAM] int 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;Total ram usage:        7 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 2
  1380 ;; This function calls:
  1381 ;;		_fputc
  1382 ;; This function is called by:
  1383 ;;		_pad
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text6
  1388   001954                     __ptext6:
  1389                           	callstack 0
  1390   001954                     _fputs:
  1391                           	callstack 23
  1392   001954  0E00               	movlw	0
  1393   001956  6E10               	movwf	(fputs@i+1)^0,c
  1394   001958  0E00               	movlw	0
  1395   00195A  6E0F               	movwf	fputs@i^0,c
  1396   00195C  EFBB  F00C         	goto	l1287
  1397   001960                     l1283:
  1398   001960  C00E  F001         	movff	fputs@c,fputc@c
  1399   001964  6A02               	clrf	(fputc@c+1)^0,c
  1400   001966  C00C  F003         	movff	fputs@fp,fputc@fp
  1401   00196A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1402   00196E  EC66  F00B         	call	_fputc	;wreg free
  1403   001972  4A0F               	infsnz	fputs@i^0,f,c
  1404   001974  2A10               	incf	(fputs@i+1)^0,f,c
  1405   001976                     l1287:
  1406   001976  500F               	movf	fputs@i^0,w,c
  1407   001978  240A               	addwf	fputs@s^0,w,c
  1408   00197A  6ED9               	movwf	fsr2l,c
  1409   00197C  5010               	movf	(fputs@i+1)^0,w,c
  1410   00197E  200B               	addwfc	(fputs@s+1)^0,w,c
  1411   001980  6EDA               	movwf	fsr2h,c
  1412   001982  50DF               	movf	indf2,w,c
  1413   001984  6E0E               	movwf	fputs@c^0,c
  1414   001986  500E               	movf	fputs@c^0,w,c
  1415   001988  A4D8               	btfss	status,2,c
  1416   00198A  EFC9  F00C         	goto	u421
  1417   00198E  EFCB  F00C         	goto	u420
  1418   001992                     u421:
  1419   001992  EFB0  F00C         	goto	l1283
  1420   001996                     u420:
  1421   001996  0012               	return		;funcret
  1422   001998                     __end_of_fputs:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _fputc *****************
  1426 ;; Defined at:
  1427 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  c               2    0[COMRAM] int 
  1430 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1431 ;;		 -> sprintf@f(11), 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  2    0[COMRAM] int 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;Total ram usage:        9 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 1
  1450 ;; This function calls:
  1451 ;;		_putch
  1452 ;; This function is called by:
  1453 ;;		_pad
  1454 ;;		_vfpfcnvrt
  1455 ;;		_fputs
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text7
  1460   0016CC                     __ptext7:
  1461                           	callstack 0
  1462   0016CC                     _fputc:
  1463                           	callstack 26
  1464   0016CC  5003               	movf	fputc@fp^0,w,c
  1465   0016CE  1004               	iorwf	(fputc@fp+1)^0,w,c
  1466   0016D0  B4D8               	btfsc	status,2,c
  1467   0016D2  EF6D  F00B         	goto	u381
  1468   0016D6  EF6F  F00B         	goto	u380
  1469   0016DA                     u381:
  1470   0016DA  EF78  F00B         	goto	l1271
  1471   0016DE                     u380:
  1472   0016DE  5003               	movf	fputc@fp^0,w,c
  1473   0016E0  1004               	iorwf	(fputc@fp+1)^0,w,c
  1474   0016E2  A4D8               	btfss	status,2,c
  1475   0016E4  EF76  F00B         	goto	u391
  1476   0016E8  EF78  F00B         	goto	u390
  1477   0016EC                     u391:
  1478   0016EC  EF7D  F00B         	goto	l1273
  1479   0016F0                     u390:
  1480   0016F0                     l1271:
  1481   0016F0  5001               	movf	fputc@c^0,w,c
  1482   0016F2  ECA7  F00D         	call	_putch
  1483   0016F6  EFCA  F00B         	goto	l902
  1484   0016FA                     l1273:
  1485   0016FA  EE20 F009          	lfsr	2,9
  1486   0016FE  5003               	movf	fputc@fp^0,w,c
  1487   001700  26D9               	addwf	fsr2l,f,c
  1488   001702  5004               	movf	(fputc@fp+1)^0,w,c
  1489   001704  22DA               	addwfc	fsr2h,f,c
  1490   001706  50DE               	movf	postinc2,w,c
  1491   001708  10DE               	iorwf	postinc2,w,c
  1492   00170A  B4D8               	btfsc	status,2,c
  1493   00170C  EF8A  F00B         	goto	u401
  1494   001710  EF8C  F00B         	goto	u400
  1495   001714                     u401:
  1496   001714  EFA7  F00B         	goto	l1277
  1497   001718                     u400:
  1498   001718  EE20 F009          	lfsr	2,9
  1499   00171C  5003               	movf	fputc@fp^0,w,c
  1500   00171E  26D9               	addwf	fsr2l,f,c
  1501   001720  5004               	movf	(fputc@fp+1)^0,w,c
  1502   001722  22DA               	addwfc	fsr2h,f,c
  1503   001724  EE10 F003          	lfsr	1,3
  1504   001728  5003               	movf	fputc@fp^0,w,c
  1505   00172A  26E1               	addwf	fsr1l,f,c
  1506   00172C  5004               	movf	(fputc@fp+1)^0,w,c
  1507   00172E  22E2               	addwfc	fsr1h,f,c
  1508   001730  50DE               	movf	postinc2,w,c
  1509   001732  5CE6               	subwf	postinc1,w,c
  1510   001734  50E6               	movf	postinc1,w,c
  1511   001736  0A80               	xorlw	128
  1512   001738  6E09               	movwf	(??_fputc+4)^0,c
  1513   00173A  50DE               	movf	postinc2,w,c
  1514   00173C  0A80               	xorlw	128
  1515   00173E  5809               	subwfb	(??_fputc+4)^0,w,c
  1516   001740  B0D8               	btfsc	status,0,c
  1517   001742  EFA5  F00B         	goto	u411
  1518   001746  EFA7  F00B         	goto	u410
  1519   00174A                     u411:
  1520   00174A  EFCA  F00B         	goto	l902
  1521   00174E                     u410:
  1522   00174E                     l1277:
  1523   00174E  EE20 F003          	lfsr	2,3
  1524   001752  5003               	movf	fputc@fp^0,w,c
  1525   001754  26D9               	addwf	fsr2l,f,c
  1526   001756  5004               	movf	(fputc@fp+1)^0,w,c
  1527   001758  22DA               	addwfc	fsr2h,f,c
  1528   00175A  CFDE F005          	movff	postinc2,??_fputc
  1529   00175E  CFDD F006          	movff	postdec2,??_fputc+1
  1530   001762  C003  FFD9         	movff	fputc@fp,fsr2l
  1531   001766  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1532   00176A  CFDE F007          	movff	postinc2,??_fputc+2
  1533   00176E  CFDD F008          	movff	postdec2,??_fputc+3
  1534   001772  5005               	movf	??_fputc^0,w,c
  1535   001774  2407               	addwf	(??_fputc+2)^0,w,c
  1536   001776  6ED9               	movwf	fsr2l,c
  1537   001778  5006               	movf	(??_fputc+1)^0,w,c
  1538   00177A  2008               	addwfc	(??_fputc+3)^0,w,c
  1539   00177C  6EDA               	movwf	fsr2h,c
  1540   00177E  C001  FFDF         	movff	fputc@c,indf2
  1541   001782  EE20 F003          	lfsr	2,3
  1542   001786  5003               	movf	fputc@fp^0,w,c
  1543   001788  26D9               	addwf	fsr2l,f,c
  1544   00178A  5004               	movf	(fputc@fp+1)^0,w,c
  1545   00178C  22DA               	addwfc	fsr2h,f,c
  1546   00178E  2ADE               	incf	postinc2,f,c
  1547   001790  0E00               	movlw	0
  1548   001792  22DD               	addwfc	postdec2,f,c
  1549   001794                     l902:
  1550   001794  0012               	return		;funcret
  1551   001796                     __end_of_fputc:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _putch *****************
  1555 ;; Defined at:
  1556 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  c               1    wreg     unsigned char 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  c               1    0[COMRAM] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_fputc
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text8
  1584   001B4E                     __ptext8:
  1585                           	callstack 0
  1586   001B4E                     _putch:
  1587                           	callstack 26
  1588   001B4E  0012               	return		;funcret
  1589   001B50                     __end_of_putch:
  1590                           	callstack 0
  1591                           
  1592 ;; *************** function _abs *****************
  1593 ;; Defined at:
  1594 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  a               2   18[COMRAM] int 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  2   18[COMRAM] int 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;Total ram usage:        4 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_dtoa
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text9
  1622   001A1C                     __ptext9:
  1623                           	callstack 0
  1624   001A1C                     _abs:
  1625                           	callstack 26
  1626   001A1C  BE14               	btfsc	(abs@a+1)^0,7,c
  1627   001A1E  EF1B  F00D         	goto	u580
  1628   001A22  5014               	movf	(abs@a+1)^0,w,c
  1629   001A24  E106               	bnz	u581
  1630   001A26  0413               	decf	abs@a^0,w,c
  1631   001A28  B0D8               	btfsc	status,0,c
  1632   001A2A  EF19  F00D         	goto	u581
  1633   001A2E  EF1B  F00D         	goto	u580
  1634   001A32                     u581:
  1635   001A32  EF29  F00D         	goto	l887
  1636   001A36                     u580:
  1637   001A36  C013  F015         	movff	abs@a,??_abs
  1638   001A3A  C014  F016         	movff	abs@a+1,??_abs+1
  1639   001A3E  1E15               	comf	??_abs^0,f,c
  1640   001A40  1E16               	comf	(??_abs+1)^0,f,c
  1641   001A42  4A15               	infsnz	??_abs^0,f,c
  1642   001A44  2A16               	incf	(??_abs+1)^0,f,c
  1643   001A46  C015  F013         	movff	??_abs,?_abs
  1644   001A4A  C016  F014         	movff	??_abs+1,?_abs+1
  1645   001A4E  EF2D  F00D         	goto	l890
  1646   001A52                     l887:
  1647   001A52  C013  F013         	movff	abs@a,?_abs
  1648   001A56  C014  F014         	movff	abs@a+1,?_abs+1
  1649   001A5A                     l890:
  1650   001A5A  0012               	return		;funcret
  1651   001A5C                     __end_of_abs:
  1652                           	callstack 0
  1653                           
  1654 ;; *************** function ___aomod *****************
  1655 ;; Defined at:
  1656 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  dividend        8    0[COMRAM] long long 
  1659 ;;  divisor         8    8[COMRAM] long long 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  sign            1   17[COMRAM] unsigned char 
  1662 ;;  counter         1   16[COMRAM] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  8    0[COMRAM] long long 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1672 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;Total ram usage:       18 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_dtoa
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text10
  1686   00140A                     __ptext10:
  1687                           	callstack 0
  1688   00140A                     ___aomod:
  1689                           	callstack 26
  1690   00140A  0E00               	movlw	0
  1691   00140C  6E12               	movwf	___aomod@sign^0,c
  1692   00140E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  1693   001410  EF0E  F00A         	goto	u500
  1694   001414  EF0C  F00A         	goto	u501
  1695   001418                     u501:
  1696   001418  EF20  F00A         	goto	l1341
  1697   00141C                     u500:
  1698   00141C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  1699   00141E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  1700   001420  1E06               	comf	(___aomod@dividend+5)^0,f,c
  1701   001422  1E05               	comf	(___aomod@dividend+4)^0,f,c
  1702   001424  1E04               	comf	(___aomod@dividend+3)^0,f,c
  1703   001426  1E03               	comf	(___aomod@dividend+2)^0,f,c
  1704   001428  1E02               	comf	(___aomod@dividend+1)^0,f,c
  1705   00142A  6C01               	negf	___aomod@dividend^0,c
  1706   00142C  0E00               	movlw	0
  1707   00142E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  1708   001430  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  1709   001432  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  1710   001434  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  1711   001436  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  1712   001438  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  1713   00143A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  1714   00143C  0E01               	movlw	1
  1715   00143E  6E12               	movwf	___aomod@sign^0,c
  1716   001440                     l1341:
  1717   001440  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  1718   001442  EF27  F00A         	goto	u510
  1719   001446  EF25  F00A         	goto	u511
  1720   00144A                     u511:
  1721   00144A  EF37  F00A         	goto	l1345
  1722   00144E                     u510:
  1723   00144E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  1724   001450  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  1725   001452  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  1726   001454  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  1727   001456  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  1728   001458  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  1729   00145A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  1730   00145C  6C09               	negf	___aomod@divisor^0,c
  1731   00145E  0E00               	movlw	0
  1732   001460  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  1733   001462  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  1734   001464  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  1735   001466  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  1736   001468  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  1737   00146A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  1738   00146C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  1739   00146E                     l1345:
  1740   00146E  5009               	movf	___aomod@divisor^0,w,c
  1741   001470  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  1742   001472  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  1743   001474  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  1744   001476  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  1745   001478  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  1746   00147A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  1747   00147C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  1748   00147E  B4D8               	btfsc	status,2,c
  1749   001480  EF44  F00A         	goto	u521
  1750   001484  EF46  F00A         	goto	u520
  1751   001488                     u521:
  1752   001488  EF8E  F00A         	goto	l1361
  1753   00148C                     u520:
  1754   00148C  0E01               	movlw	1
  1755   00148E  6E11               	movwf	___aomod@counter^0,c
  1756   001490  EF54  F00A         	goto	l1351
  1757   001494                     l1349:
  1758   001494  90D8               	bcf	status,0,c
  1759   001496  3609               	rlcf	___aomod@divisor^0,f,c
  1760   001498  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  1761   00149A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  1762   00149C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  1763   00149E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  1764   0014A0  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  1765   0014A2  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  1766   0014A4  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  1767   0014A6  2A11               	incf	___aomod@counter^0,f,c
  1768   0014A8                     l1351:
  1769   0014A8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  1770   0014AA  EF59  F00A         	goto	u531
  1771   0014AE  EF5B  F00A         	goto	u530
  1772   0014B2                     u531:
  1773   0014B2  EF4A  F00A         	goto	l1349
  1774   0014B6                     u530:
  1775   0014B6                     l1353:
  1776   0014B6  5009               	movf	___aomod@divisor^0,w,c
  1777   0014B8  5C01               	subwf	___aomod@dividend^0,w,c
  1778   0014BA  500A               	movf	(___aomod@divisor+1)^0,w,c
  1779   0014BC  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  1780   0014BE  500B               	movf	(___aomod@divisor+2)^0,w,c
  1781   0014C0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  1782   0014C2  500C               	movf	(___aomod@divisor+3)^0,w,c
  1783   0014C4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  1784   0014C6  500D               	movf	(___aomod@divisor+4)^0,w,c
  1785   0014C8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  1786   0014CA  500E               	movf	(___aomod@divisor+5)^0,w,c
  1787   0014CC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  1788   0014CE  500F               	movf	(___aomod@divisor+6)^0,w,c
  1789   0014D0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  1790   0014D2  5010               	movf	(___aomod@divisor+7)^0,w,c
  1791   0014D4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  1792   0014D6  A0D8               	btfss	status,0,c
  1793   0014D8  EF70  F00A         	goto	u541
  1794   0014DC  EF72  F00A         	goto	u540
  1795   0014E0                     u541:
  1796   0014E0  EF82  F00A         	goto	l1357
  1797   0014E4                     u540:
  1798   0014E4  5009               	movf	___aomod@divisor^0,w,c
  1799   0014E6  5E01               	subwf	___aomod@dividend^0,f,c
  1800   0014E8  500A               	movf	(___aomod@divisor+1)^0,w,c
  1801   0014EA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  1802   0014EC  500B               	movf	(___aomod@divisor+2)^0,w,c
  1803   0014EE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  1804   0014F0  500C               	movf	(___aomod@divisor+3)^0,w,c
  1805   0014F2  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  1806   0014F4  500D               	movf	(___aomod@divisor+4)^0,w,c
  1807   0014F6  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  1808   0014F8  500E               	movf	(___aomod@divisor+5)^0,w,c
  1809   0014FA  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  1810   0014FC  500F               	movf	(___aomod@divisor+6)^0,w,c
  1811   0014FE  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  1812   001500  5010               	movf	(___aomod@divisor+7)^0,w,c
  1813   001502  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  1814   001504                     l1357:
  1815   001504  90D8               	bcf	status,0,c
  1816   001506  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  1817   001508  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  1818   00150A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  1819   00150C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  1820   00150E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  1821   001510  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  1822   001512  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  1823   001514  3209               	rrcf	___aomod@divisor^0,f,c
  1824   001516  2E11               	decfsz	___aomod@counter^0,f,c
  1825   001518  EF5B  F00A         	goto	l1353
  1826   00151C                     l1361:
  1827   00151C  5012               	movf	___aomod@sign^0,w,c
  1828   00151E  B4D8               	btfsc	status,2,c
  1829   001520  EF94  F00A         	goto	u551
  1830   001524  EF96  F00A         	goto	u550
  1831   001528                     u551:
  1832   001528  EFA6  F00A         	goto	l1365
  1833   00152C                     u550:
  1834   00152C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  1835   00152E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  1836   001530  1E06               	comf	(___aomod@dividend+5)^0,f,c
  1837   001532  1E05               	comf	(___aomod@dividend+4)^0,f,c
  1838   001534  1E04               	comf	(___aomod@dividend+3)^0,f,c
  1839   001536  1E03               	comf	(___aomod@dividend+2)^0,f,c
  1840   001538  1E02               	comf	(___aomod@dividend+1)^0,f,c
  1841   00153A  6C01               	negf	___aomod@dividend^0,c
  1842   00153C  0E00               	movlw	0
  1843   00153E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  1844   001540  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  1845   001542  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  1846   001544  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  1847   001546  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  1848   001548  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  1849   00154A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  1850   00154C                     l1365:
  1851   00154C  C001  F001         	movff	___aomod@dividend,?___aomod
  1852   001550  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  1853   001554  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  1854   001558  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  1855   00155C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  1856   001560  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  1857   001564  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  1858   001568  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  1859   00156C  0012               	return		;funcret
  1860   00156E                     __end_of___aomod:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function ___aodiv *****************
  1864 ;; Defined at:
  1865 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  dividend        8    0[COMRAM] long long 
  1868 ;;  divisor         8    8[COMRAM] long long 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  quotient        8   18[COMRAM] long long 
  1871 ;;  sign            1   17[COMRAM] unsigned char 
  1872 ;;  counter         1   16[COMRAM] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  8    0[COMRAM] long long 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1882 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;Total ram usage:       26 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_dtoa
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text11
  1896   001282                     __ptext11:
  1897                           	callstack 0
  1898   001282                     ___aodiv:
  1899                           	callstack 26
  1900   001282  0E00               	movlw	0
  1901   001284  6E12               	movwf	___aodiv@sign^0,c
  1902   001286  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  1903   001288  EF4A  F009         	goto	u430
  1904   00128C  EF48  F009         	goto	u431
  1905   001290                     u431:
  1906   001290  EF5C  F009         	goto	l1297
  1907   001294                     u430:
  1908   001294  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  1909   001296  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  1910   001298  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  1911   00129A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  1912   00129C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  1913   00129E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  1914   0012A0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  1915   0012A2  6C09               	negf	___aodiv@divisor^0,c
  1916   0012A4  0E00               	movlw	0
  1917   0012A6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  1918   0012A8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  1919   0012AA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  1920   0012AC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  1921   0012AE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  1922   0012B0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  1923   0012B2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  1924   0012B4  0E01               	movlw	1
  1925   0012B6  6E12               	movwf	___aodiv@sign^0,c
  1926   0012B8                     l1297:
  1927   0012B8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  1928   0012BA  EF63  F009         	goto	u440
  1929   0012BE  EF61  F009         	goto	u441
  1930   0012C2                     u441:
  1931   0012C2  EF75  F009         	goto	l1303
  1932   0012C6                     u440:
  1933   0012C6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  1934   0012C8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  1935   0012CA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  1936   0012CC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  1937   0012CE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  1938   0012D0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  1939   0012D2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  1940   0012D4  6C01               	negf	___aodiv@dividend^0,c
  1941   0012D6  0E00               	movlw	0
  1942   0012D8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  1943   0012DA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  1944   0012DC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  1945   0012DE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  1946   0012E0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  1947   0012E2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  1948   0012E4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  1949   0012E6  0E01               	movlw	1
  1950   0012E8  1A12               	xorwf	___aodiv@sign^0,f,c
  1951   0012EA                     l1303:
  1952   0012EA  EE20  F013         	lfsr	2,___aodiv@quotient
  1953   0012EE  0E07               	movlw	7
  1954   0012F0                     u451:
  1955   0012F0  6ADE               	clrf	postinc2,c
  1956   0012F2  06E8               	decf	wreg,f,c
  1957   0012F4  E2FD               	bc	u451
  1958   0012F6  5009               	movf	___aodiv@divisor^0,w,c
  1959   0012F8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  1960   0012FA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  1961   0012FC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  1962   0012FE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  1963   001300  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  1964   001302  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  1965   001304  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  1966   001306  B4D8               	btfsc	status,2,c
  1967   001308  EF88  F009         	goto	u461
  1968   00130C  EF8A  F009         	goto	u460
  1969   001310                     u461:
  1970   001310  EFDC  F009         	goto	l1325
  1971   001314                     u460:
  1972   001314  0E01               	movlw	1
  1973   001316  6E11               	movwf	___aodiv@counter^0,c
  1974   001318  EF98  F009         	goto	l1311
  1975   00131C                     l1309:
  1976   00131C  90D8               	bcf	status,0,c
  1977   00131E  3609               	rlcf	___aodiv@divisor^0,f,c
  1978   001320  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  1979   001322  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  1980   001324  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  1981   001326  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  1982   001328  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  1983   00132A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  1984   00132C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  1985   00132E  2A11               	incf	___aodiv@counter^0,f,c
  1986   001330                     l1311:
  1987   001330  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  1988   001332  EF9D  F009         	goto	u471
  1989   001336  EF9F  F009         	goto	u470
  1990   00133A                     u471:
  1991   00133A  EF8E  F009         	goto	l1309
  1992   00133E                     u470:
  1993   00133E                     l1313:
  1994   00133E  90D8               	bcf	status,0,c
  1995   001340  3613               	rlcf	___aodiv@quotient^0,f,c
  1996   001342  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  1997   001344  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  1998   001346  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  1999   001348  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2000   00134A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2001   00134C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2002   00134E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2003   001350  5009               	movf	___aodiv@divisor^0,w,c
  2004   001352  5C01               	subwf	___aodiv@dividend^0,w,c
  2005   001354  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2006   001356  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2007   001358  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2008   00135A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2009   00135C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2010   00135E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2011   001360  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2012   001362  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2013   001364  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2014   001366  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2015   001368  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2016   00136A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2017   00136C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2018   00136E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2019   001370  A0D8               	btfss	status,0,c
  2020   001372  EFBD  F009         	goto	u481
  2021   001376  EFBF  F009         	goto	u480
  2022   00137A                     u481:
  2023   00137A  EFD0  F009         	goto	l1321
  2024   00137E                     u480:
  2025   00137E  5009               	movf	___aodiv@divisor^0,w,c
  2026   001380  5E01               	subwf	___aodiv@dividend^0,f,c
  2027   001382  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2028   001384  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2029   001386  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2030   001388  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2031   00138A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2032   00138C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2033   00138E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2034   001390  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2035   001392  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2036   001394  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2037   001396  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2038   001398  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2039   00139A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2040   00139C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2041   00139E  8013               	bsf	___aodiv@quotient^0,0,c
  2042   0013A0                     l1321:
  2043   0013A0  90D8               	bcf	status,0,c
  2044   0013A2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2045   0013A4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2046   0013A6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2047   0013A8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2048   0013AA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2049   0013AC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2050   0013AE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2051   0013B0  3209               	rrcf	___aodiv@divisor^0,f,c
  2052   0013B2  2E11               	decfsz	___aodiv@counter^0,f,c
  2053   0013B4  EF9F  F009         	goto	l1313
  2054   0013B8                     l1325:
  2055   0013B8  5012               	movf	___aodiv@sign^0,w,c
  2056   0013BA  B4D8               	btfsc	status,2,c
  2057   0013BC  EFE2  F009         	goto	u491
  2058   0013C0  EFE4  F009         	goto	u490
  2059   0013C4                     u491:
  2060   0013C4  EFF4  F009         	goto	l1329
  2061   0013C8                     u490:
  2062   0013C8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2063   0013CA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2064   0013CC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2065   0013CE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2066   0013D0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2067   0013D2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2068   0013D4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2069   0013D6  6C13               	negf	___aodiv@quotient^0,c
  2070   0013D8  0E00               	movlw	0
  2071   0013DA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2072   0013DC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2073   0013DE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2074   0013E0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2075   0013E2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2076   0013E4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2077   0013E6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2078   0013E8                     l1329:
  2079   0013E8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2080   0013EC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2081   0013F0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2082   0013F4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2083   0013F8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2084   0013FC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2085   001400  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2086   001404  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2087   001408  0012               	return		;funcret
  2088   00140A                     __end_of___aodiv:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _SYSTEM_Initialize *****************
  2092 ;; Defined at:
  2093 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 1
  2114 ;; This function calls:
  2115 ;;		_ADC_Initialize
  2116 ;;		_OSCILLATOR_Initialize
  2117 ;;		_PIN_MANAGER_Initialize
  2118 ;; This function is called by:
  2119 ;;		_main
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text12
  2124   001B36                     __ptext12:
  2125                           	callstack 0
  2126   001B36                     _SYSTEM_Initialize:
  2127                           	callstack 29
  2128   001B36                     
  2129                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2130   001B36  EC2E  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  2131                           
  2132                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2133   001B3A  ECA2  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  2134                           
  2135                           ;mcc_generated_files/mcc.c: 55:     ADC_Initialize();
  2136   001B3E  EC86  F00D         	call	_ADC_Initialize	;wreg free
  2137   001B42  0012               	return		;funcret
  2138   001B44                     __end_of_SYSTEM_Initialize:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _PIN_MANAGER_Initialize *****************
  2142 ;; Defined at:
  2143 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_SYSTEM_Initialize
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text13
  2171   001A5C                     __ptext13:
  2172                           	callstack 0
  2173   001A5C                     _PIN_MANAGER_Initialize:
  2174                           	callstack 29
  2175   001A5C                     
  2176                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  2177   001A5C  0E00               	movlw	0
  2178   001A5E  6E8D               	movwf	141,c	;volatile
  2179                           
  2180                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  2181   001A60  0E00               	movlw	0
  2182   001A62  6E91               	movwf	145,c	;volatile
  2183                           
  2184                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  2185   001A64  0E00               	movlw	0
  2186   001A66  6E8C               	movwf	140,c	;volatile
  2187                           
  2188                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  2189   001A68  0E00               	movlw	0
  2190   001A6A  6E89               	movwf	137,c	;volatile
  2191                           
  2192                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  2193   001A6C  0E00               	movlw	0
  2194   001A6E  6E8E               	movwf	142,c	;volatile
  2195                           
  2196                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  2197   001A70  0E00               	movlw	0
  2198   001A72  6E8A               	movwf	138,c	;volatile
  2199                           
  2200                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  2201   001A74  0E00               	movlw	0
  2202   001A76  6E8F               	movwf	143,c	;volatile
  2203                           
  2204                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2205   001A78  0E00               	movlw	0
  2206   001A7A  6E8B               	movwf	139,c	;volatile
  2207                           
  2208                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  2209   001A7C  0E00               	movlw	0
  2210   001A7E  6E90               	movwf	144,c	;volatile
  2211   001A80                     
  2212                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  2213   001A80  6896               	setf	150,c	;volatile
  2214   001A82                     
  2215                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  2216   001A82  6897               	setf	151,c	;volatile
  2217                           
  2218                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  2219   001A84  0E3F               	movlw	63
  2220   001A86  6E92               	movwf	146,c	;volatile
  2221   001A88                     
  2222                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  2223   001A88  6898               	setf	152,c	;volatile
  2224   001A8A                     
  2225                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  2226   001A8A  6893               	setf	147,c	;volatile
  2227   001A8C                     
  2228                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  2229   001A8C  6899               	setf	153,c	;volatile
  2230   001A8E                     
  2231                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xFF;
  2232   001A8E  6894               	setf	148,c	;volatile
  2233   001A90                     
  2234                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
  2235   001A90  6895               	setf	149,c	;volatile
  2236   001A92                     
  2237                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
  2238   001A92  689A               	setf	154,c	;volatile
  2239                           
  2240                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  2241   001A94  0EF0               	movlw	-16
  2242   001A96  16C1               	andwf	193,f,c	;volatile
  2243   001A98  0012               	return		;funcret
  2244   001A9A                     __end_of_PIN_MANAGER_Initialize:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _OSCILLATOR_Initialize *****************
  2248 ;; Defined at:
  2249 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_SYSTEM_Initialize
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text14
  2277   001B44                     __ptext14:
  2278                           	callstack 0
  2279   001B44                     _OSCILLATOR_Initialize:
  2280                           	callstack 29
  2281   001B44                     
  2282                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x02;
  2283   001B44  0E02               	movlw	2
  2284   001B46  6ED3               	movwf	211,c	;volatile
  2285                           
  2286                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2287   001B48  0E00               	movlw	0
  2288   001B4A  6E9B               	movwf	155,c	;volatile
  2289   001B4C  0012               	return		;funcret
  2290   001B4E                     __end_of_OSCILLATOR_Initialize:
  2291                           	callstack 0
  2292                           
  2293 ;; *************** function _ADC_Initialize *****************
  2294 ;; Defined at:
  2295 ;;		line 61 in file "mcc_generated_files/adc.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_SYSTEM_Initialize
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text15
  2323   001B0C                     __ptext15:
  2324                           	callstack 0
  2325   001B0C                     _ADC_Initialize:
  2326                           	callstack 29
  2327   001B0C                     
  2328                           ;mcc_generated_files/adc.c: 66:     ADCON1 = 0x00;
  2329   001B0C  0E00               	movlw	0
  2330   001B0E  6EC1               	movwf	193,c	;volatile
  2331                           
  2332                           ;mcc_generated_files/adc.c: 69:     ADCON2 = 0x80;
  2333   001B10  0E80               	movlw	128
  2334   001B12  6EC0               	movwf	192,c	;volatile
  2335                           
  2336                           ;mcc_generated_files/adc.c: 72:     ADRESL = 0x00;
  2337   001B14  0E00               	movlw	0
  2338   001B16  6EC3               	movwf	195,c	;volatile
  2339                           
  2340                           ;mcc_generated_files/adc.c: 75:     ADRESH = 0x00;
  2341   001B18  0E00               	movlw	0
  2342   001B1A  6EC4               	movwf	196,c	;volatile
  2343                           
  2344                           ;mcc_generated_files/adc.c: 78:     ADCON0 = 0x01;
  2345   001B1C  0E01               	movlw	1
  2346   001B1E  6EC2               	movwf	194,c	;volatile
  2347   001B20  0012               	return		;funcret
  2348   001B22                     __end_of_ADC_Initialize:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _Lcd_Init *****************
  2352 ;; Defined at:
  2353 ;;		line 17 in file "lcd/lcd.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      char 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;Total ram usage:        2 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 1
  2374 ;; This function calls:
  2375 ;;		_LCD_2x16_WriteCmd
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text16
  2382   001998                     __ptext16:
  2383                           	callstack 0
  2384   001998                     _Lcd_Init:
  2385                           	callstack 29
  2386   001998                     
  2387                           ;lcd/lcd.c: 21:         TRISDbits.TRISD3 = 0;
  2388   001998  9695               	bcf	149,3,c	;volatile
  2389                           
  2390                           ;lcd/lcd.c: 22:         LATDbits.LATD3 = 0;
  2391   00199A  968C               	bcf	140,3,c	;volatile
  2392                           
  2393                           ;lcd/lcd.c: 23:         TRISDbits.TRISD2 = 0;
  2394   00199C  9495               	bcf	149,2,c	;volatile
  2395                           
  2396                           ;lcd/lcd.c: 24:         LATDbits.LATD2 = 0;
  2397   00199E  948C               	bcf	140,2,c	;volatile
  2398   0019A0                     
  2399                           ;lcd/lcd.c: 25:         TRISJ = TRISJ & 0x0F;
  2400   0019A0  509A               	movf	154,w,c	;volatile
  2401   0019A2  0B0F               	andlw	15
  2402   0019A4  6E9A               	movwf	154,c	;volatile
  2403   0019A6                     
  2404                           ;lcd/lcd.c: 27:         _delay((unsigned long)((200)*(25000000L/4000.0)));
  2405   0019A6  0E07               	movlw	7
  2406   0019A8  6E04               	movwf	(??_Lcd_Init+1)^0,c
  2407   0019AA  0E58               	movlw	88
  2408   0019AC  6E03               	movwf	??_Lcd_Init^0,c
  2409   0019AE  0E5A               	movlw	90
  2410   0019B0                     u757:
  2411   0019B0  2EE8               	decfsz	wreg,f,c
  2412   0019B2  D7FE               	bra	u757
  2413   0019B4  2E03               	decfsz	??_Lcd_Init^0,f,c
  2414   0019B6  D7FC               	bra	u757
  2415   0019B8  2E04               	decfsz	(??_Lcd_Init+1)^0,f,c
  2416   0019BA  D7FA               	bra	u757
  2417   0019BC                     
  2418                           ;lcd/lcd.c: 28:         LCD_2x16_WriteCmd(0x02);
  2419   0019BC  0E02               	movlw	2
  2420   0019BE  EC08  F00C         	call	_LCD_2x16_WriteCmd
  2421   0019C2                     
  2422                           ;lcd/lcd.c: 30:         LCD_2x16_WriteCmd(0x28);
  2423   0019C2  0E28               	movlw	40
  2424   0019C4  EC08  F00C         	call	_LCD_2x16_WriteCmd
  2425   0019C8                     
  2426                           ;lcd/lcd.c: 33:         LCD_2x16_WriteCmd(0x01);
  2427   0019C8  0E01               	movlw	1
  2428   0019CA  EC08  F00C         	call	_LCD_2x16_WriteCmd
  2429   0019CE                     
  2430                           ;lcd/lcd.c: 34:         LCD_2x16_WriteCmd(0x0C);
  2431   0019CE  0E0C               	movlw	12
  2432   0019D0  EC08  F00C         	call	_LCD_2x16_WriteCmd
  2433   0019D4                     
  2434                           ;lcd/lcd.c: 37:         LCD_2x16_WriteCmd(0x06);
  2435   0019D4  0E06               	movlw	6
  2436   0019D6  EC08  F00C         	call	_LCD_2x16_WriteCmd
  2437   0019DA  0012               	return		;funcret
  2438   0019DC                     __end_of_Lcd_Init:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _LCD_2x16_WriteMsg *****************
  2442 ;; Defined at:
  2443 ;;		line 74 in file "lcd/lcd.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  msg             2    2[COMRAM] PTR unsigned char 
  2446 ;;  line            1    4[COMRAM] unsigned char 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2458 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;Total ram usage:        3 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 1
  2465 ;; This function calls:
  2466 ;;		_LCD_2x16_WriteCmd
  2467 ;;		_LCD_2x16_WriteData
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text17
  2474   001AD4                     __ptext17:
  2475                           	callstack 0
  2476   001AD4                     _LCD_2x16_WriteMsg:
  2477                           	callstack 29
  2478   001AD4                     
  2479                           ;lcd/lcd.c: 74: void LCD_2x16_WriteMsg(unsigned char * msg, uint8_t line);lcd/lcd.c: 75:
      +                           {;lcd/lcd.c: 76:     LCD_2x16_WriteCmd(0x80 | (line << 6));
  2480   001AD4  4005               	rrncf	LCD_2x16_WriteMsg@line^0,w,c
  2481   001AD6  42E8               	rrncf	wreg,f,c
  2482   001AD8  0BC0               	andlw	192
  2483   001ADA  0980               	iorlw	128
  2484   001ADC  EC08  F00C         	call	_LCD_2x16_WriteCmd
  2485   001AE0                     l1587:
  2486                           
  2487                           ;lcd/lcd.c: 78:     {;lcd/lcd.c: 79:         LCD_2x16_WriteData(*msg);
  2488   001AE0  C003  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  2489   001AE4  C004  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  2490   001AE8  50DF               	movf	indf2,w,c
  2491   001AEA  EC5E  F00C         	call	_LCD_2x16_WriteData
  2492   001AEE                     
  2493                           ;lcd/lcd.c: 80:         msg++;
  2494   001AEE  4A03               	infsnz	LCD_2x16_WriteMsg@msg^0,f,c
  2495   001AF0  2A04               	incf	(LCD_2x16_WriteMsg@msg+1)^0,f,c
  2496   001AF2                     
  2497                           ;lcd/lcd.c: 81:     }while(*msg != 0);
  2498   001AF2  C003  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  2499   001AF6  C004  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  2500   001AFA  50DF               	movf	indf2,w,c
  2501   001AFC  A4D8               	btfss	status,2,c
  2502   001AFE  EF83  F00D         	goto	u741
  2503   001B02  EF85  F00D         	goto	u740
  2504   001B06                     u741:
  2505   001B06  EF70  F00D         	goto	l1587
  2506   001B0A                     u740:
  2507   001B0A  0012               	return		;funcret
  2508   001B0C                     __end_of_LCD_2x16_WriteMsg:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _LCD_2x16_WriteData *****************
  2512 ;; Defined at:
  2513 ;;		line 58 in file "lcd/lcd.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  command         1    wreg     unsigned char 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  command         1    1[COMRAM] unsigned char 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;Total ram usage:        2 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_LCD_2x16_WriteMsg
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text18
  2541   0018BC                     __ptext18:
  2542                           	callstack 0
  2543   0018BC                     _LCD_2x16_WriteData:
  2544                           	callstack 29
  2545                           
  2546                           ;incstack = 0
  2547                           ;LCD_2x16_WriteData@command stored from wreg
  2548   0018BC  6E02               	movwf	LCD_2x16_WriteData@command^0,c
  2549   0018BE                     
  2550                           ;lcd/lcd.c: 58: void LCD_2x16_WriteData(uint8_t command);lcd/lcd.c: 59: {;lcd/lcd.c: 60:
      +                               LATDbits.LATD3 = 1;
  2551   0018BE  868C               	bsf	140,3,c	;volatile
  2552   0018C0                     
  2553                           ;lcd/lcd.c: 61:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  2554   0018C0  CF91 F001          	movff	3985,??_LCD_2x16_WriteData	;volatile
  2555   0018C4  0E0F               	movlw	15
  2556   0018C6  1601               	andwf	??_LCD_2x16_WriteData^0,f,c
  2557   0018C8  5002               	movf	LCD_2x16_WriteData@command^0,w,c
  2558   0018CA  0BF0               	andlw	240
  2559   0018CC  1001               	iorwf	??_LCD_2x16_WriteData^0,w,c
  2560   0018CE  6E91               	movwf	145,c	;volatile
  2561   0018D0                     
  2562                           ;lcd/lcd.c: 62:     LATDbits.LATD2 = 1;
  2563   0018D0  848C               	bsf	140,2,c	;volatile
  2564   0018D2                     
  2565                           ;lcd/lcd.c: 63:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  2566   0018D2  D000               	nop2		;2 cycle nop
  2567   0018D4  D000               	nop2		;2 cycle nop
  2568   0018D6  D000               	nop2		;2 cycle nop
  2569   0018D8                     
  2570                           ;lcd/lcd.c: 64:     LATDbits.LATD2 = 0;
  2571   0018D8  948C               	bcf	140,2,c	;volatile
  2572   0018DA                     
  2573                           ;lcd/lcd.c: 65:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  2574   0018DA  D000               	nop2		;2 cycle nop
  2575   0018DC  D000               	nop2		;2 cycle nop
  2576   0018DE  D000               	nop2		;2 cycle nop
  2577                           
  2578                           ;lcd/lcd.c: 66:     command = command << 4;
  2579   0018E0  3802               	swapf	LCD_2x16_WriteData@command^0,w,c
  2580   0018E2  0BF0               	andlw	240
  2581   0018E4  6E02               	movwf	LCD_2x16_WriteData@command^0,c
  2582                           
  2583                           ;lcd/lcd.c: 67:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  2584   0018E6  CF91 F001          	movff	3985,??_LCD_2x16_WriteData	;volatile
  2585   0018EA  0E0F               	movlw	15
  2586   0018EC  1601               	andwf	??_LCD_2x16_WriteData^0,f,c
  2587   0018EE  5002               	movf	LCD_2x16_WriteData@command^0,w,c
  2588   0018F0  0BF0               	andlw	240
  2589   0018F2  1001               	iorwf	??_LCD_2x16_WriteData^0,w,c
  2590   0018F4  6E91               	movwf	145,c	;volatile
  2591   0018F6                     
  2592                           ;lcd/lcd.c: 68:     LATDbits.LATD2 = 1;
  2593   0018F6  848C               	bsf	140,2,c	;volatile
  2594   0018F8                     
  2595                           ;lcd/lcd.c: 69:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  2596   0018F8  D000               	nop2		;2 cycle nop
  2597   0018FA  D000               	nop2		;2 cycle nop
  2598   0018FC  D000               	nop2		;2 cycle nop
  2599   0018FE                     
  2600                           ;lcd/lcd.c: 70:     LATDbits.LATD2 = 0;
  2601   0018FE  948C               	bcf	140,2,c	;volatile
  2602   001900                     
  2603                           ;lcd/lcd.c: 71:     _delay((unsigned long)((100)*(25000000L/4000000.0)));
  2604   001900  0ED0               	movlw	208
  2605   001902                     u767:
  2606   001902  2EE8               	decfsz	wreg,f,c
  2607   001904  D7FE               	bra	u767
  2608   001906  F000               	nop	
  2609   001908  0012               	return		;funcret
  2610   00190A                     __end_of_LCD_2x16_WriteData:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _LCD_2x16_WriteCmd *****************
  2614 ;; Defined at:
  2615 ;;		line 43 in file "lcd/lcd.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  command         1    wreg     unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  command         1    1[COMRAM] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;Total ram usage:        2 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_Lcd_Init
  2639 ;;		_LCD_2x16_WriteMsg
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text19
  2644   001810                     __ptext19:
  2645                           	callstack 0
  2646   001810                     _LCD_2x16_WriteCmd:
  2647                           	callstack 29
  2648                           
  2649                           ;incstack = 0
  2650                           ;LCD_2x16_WriteCmd@command stored from wreg
  2651   001810  6E02               	movwf	LCD_2x16_WriteCmd@command^0,c
  2652   001812                     
  2653                           ;lcd/lcd.c: 43: void LCD_2x16_WriteCmd(uint8_t command);lcd/lcd.c: 44: {;lcd/lcd.c: 45: 
      +                              LATDbits.LATD3 = 0;
  2654   001812  968C               	bcf	140,3,c	;volatile
  2655   001814                     
  2656                           ;lcd/lcd.c: 46:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  2657   001814  CF91 F001          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  2658   001818  0E0F               	movlw	15
  2659   00181A  1601               	andwf	??_LCD_2x16_WriteCmd^0,f,c
  2660   00181C  5002               	movf	LCD_2x16_WriteCmd@command^0,w,c
  2661   00181E  0BF0               	andlw	240
  2662   001820  1001               	iorwf	??_LCD_2x16_WriteCmd^0,w,c
  2663   001822  6E91               	movwf	145,c	;volatile
  2664   001824                     
  2665                           ;lcd/lcd.c: 47:     LATDbits.LATD2 = 1;
  2666   001824  848C               	bsf	140,2,c	;volatile
  2667   001826                     
  2668                           ;lcd/lcd.c: 48:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  2669   001826  0E14               	movlw	20
  2670   001828                     u777:
  2671   001828  2EE8               	decfsz	wreg,f,c
  2672   00182A  D7FE               	bra	u777
  2673   00182C  D000               	nop2	
  2674   00182E                     
  2675                           ;lcd/lcd.c: 49:     LATDbits.LATD2 = 0;
  2676   00182E  948C               	bcf	140,2,c	;volatile
  2677   001830                     
  2678                           ;lcd/lcd.c: 50:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  2679   001830  D000               	nop2		;2 cycle nop
  2680   001832  D000               	nop2		;2 cycle nop
  2681   001834  D000               	nop2		;2 cycle nop
  2682   001836                     
  2683                           ;lcd/lcd.c: 51:     command = command << 4;
  2684   001836  3802               	swapf	LCD_2x16_WriteCmd@command^0,w,c
  2685   001838  0BF0               	andlw	240
  2686   00183A  6E02               	movwf	LCD_2x16_WriteCmd@command^0,c
  2687   00183C                     
  2688                           ;lcd/lcd.c: 52:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  2689   00183C  CF91 F001          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  2690   001840  0E0F               	movlw	15
  2691   001842  1601               	andwf	??_LCD_2x16_WriteCmd^0,f,c
  2692   001844  5002               	movf	LCD_2x16_WriteCmd@command^0,w,c
  2693   001846  0BF0               	andlw	240
  2694   001848  1001               	iorwf	??_LCD_2x16_WriteCmd^0,w,c
  2695   00184A  6E91               	movwf	145,c	;volatile
  2696   00184C                     
  2697                           ;lcd/lcd.c: 53:     LATDbits.LATD2 = 1;
  2698   00184C  848C               	bsf	140,2,c	;volatile
  2699   00184E                     
  2700                           ;lcd/lcd.c: 54:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  2701   00184E  0E14               	movlw	20
  2702   001850                     u787:
  2703   001850  2EE8               	decfsz	wreg,f,c
  2704   001852  D7FE               	bra	u787
  2705   001854  D000               	nop2	
  2706   001856                     
  2707                           ;lcd/lcd.c: 55:     LATDbits.LATD2 = 0;
  2708   001856  948C               	bcf	140,2,c	;volatile
  2709   001858                     
  2710                           ;lcd/lcd.c: 56:     _delay((unsigned long)((3)*(25000000L/4000.0)));
  2711   001858  0E19               	movlw	25
  2712   00185A  6E01               	movwf	??_LCD_2x16_WriteCmd^0,c
  2713   00185C  0E58               	movlw	88
  2714   00185E                     u797:
  2715   00185E  2EE8               	decfsz	wreg,f,c
  2716   001860  D7FE               	bra	u797
  2717   001862  2E01               	decfsz	??_LCD_2x16_WriteCmd^0,f,c
  2718   001864  D7FC               	bra	u797
  2719   001866  D000               	nop2	
  2720   001868  0012               	return		;funcret
  2721   00186A                     __end_of_LCD_2x16_WriteCmd:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _ADC_GetConversion *****************
  2725 ;; Defined at:
  2726 ;;		line 109 in file "mcc_generated_files/adc.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  channel         1    wreg     enum E4918
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  channel         1    4[COMRAM] enum E4918
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  2    0[COMRAM] unsigned short 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;Total ram usage:        5 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text20
  2754   001A9A                     __ptext20:
  2755                           	callstack 0
  2756   001A9A                     _ADC_GetConversion:
  2757                           	callstack 30
  2758                           
  2759                           ;incstack = 0
  2760                           ;ADC_GetConversion@channel stored from wreg
  2761   001A9A  6E05               	movwf	ADC_GetConversion@channel^0,c
  2762   001A9C                     
  2763                           ;mcc_generated_files/adc.c: 109: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 110: {;mcc_generated_files/adc.c: 112:     ADCON0bits.CHS = ch
      +                          annel;
  2764   001A9C  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2765   001AA0  4603               	rlncf	??_ADC_GetConversion^0,f,c
  2766   001AA2  4603               	rlncf	??_ADC_GetConversion^0,f,c
  2767   001AA4  50C2               	movf	194,w,c	;volatile
  2768   001AA6  1803               	xorwf	??_ADC_GetConversion^0,w,c
  2769   001AA8  0BC3               	andlw	-61
  2770   001AAA  1803               	xorwf	??_ADC_GetConversion^0,w,c
  2771   001AAC  6EC2               	movwf	194,c	;volatile
  2772   001AAE                     
  2773                           ;mcc_generated_files/adc.c: 115:     ADCON0bits.ADON = 1;
  2774   001AAE  80C2               	bsf	194,0,c	;volatile
  2775   001AB0                     
  2776                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  2777   001AB0  82C2               	bsf	194,1,c	;volatile
  2778   001AB2                     l112:
  2779                           
  2780                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  2781   001AB2  B2C2               	btfsc	194,1,c	;volatile
  2782   001AB4  EF5E  F00D         	goto	u731
  2783   001AB8  EF60  F00D         	goto	u730
  2784   001ABC                     u731:
  2785   001ABC  EF59  F00D         	goto	l112
  2786   001AC0                     u730:
  2787   001AC0                     
  2788                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2789   001AC0  50C4               	movf	196,w,c	;volatile
  2790   001AC2  6E04               	movwf	(??_ADC_GetConversion+1)^0,c
  2791   001AC4  6A03               	clrf	??_ADC_GetConversion^0,c
  2792   001AC6  50C3               	movf	195,w,c	;volatile
  2793   001AC8  2403               	addwf	??_ADC_GetConversion^0,w,c
  2794   001ACA  6E01               	movwf	?_ADC_GetConversion^0,c
  2795   001ACC  0E00               	movlw	0
  2796   001ACE  2004               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  2797   001AD0  6E02               	movwf	(?_ADC_GetConversion+1)^0,c
  2798   001AD2  0012               	return		;funcret
  2799   001AD4                     __end_of_ADC_GetConversion:
  2800                           	callstack 0
  2801                           
  2802                           	psect	rparam
  2803   000000                     
  2804                           	psect	config
  2805                           
  2806                           ;Config register CONFIG1L @ 0x1FFF8
  2807                           ;	Watchdog Timer Enable bit
  2808                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
  2809                           ;	Stack Overflow/Underflow Reset Enable bit
  2810                           ;	STVR = ON, Reset on stack overflow/underflow enabled
  2811                           ;	Extended Instruction Set Enable bit
  2812                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2813                           ;	Background Debugger Enable bit
  2814                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  2815   01FFF8                     	org	131064
  2816   01FFF8  A0                 	db	160
  2817                           
  2818                           ;Config register CONFIG1H @ 0x1FFF9
  2819                           ;	Code Protection bit
  2820                           ;	CP0 = OFF, Program memory is not code-protected
  2821   01FFF9                     	org	131065
  2822   01FFF9  F4                 	db	244
  2823                           
  2824                           ;Config register CONFIG2L @ 0x1FFFA
  2825                           ;	Oscillator Selection bits
  2826                           ;	FOSC = HS, HS oscillator
  2827                           ;	Default/Reset System Clock Select bit
  2828                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  2829                           ;	Fail-Safe Clock Monitor Enable
  2830                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2831                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  2832                           ;	IESO = ON, Two-Speed Start-up enabled
  2833   01FFFA                     	org	131066
  2834   01FFFA  C4                 	db	196
  2835                           
  2836                           ;Config register CONFIG2H @ 0x1FFFB
  2837                           ;	Watchdog Timer Postscaler Select bits
  2838                           ;	WDTPS = 32768, 1:32768
  2839   01FFFB                     	org	131067
  2840   01FFFB  FF                 	db	255
  2841                           
  2842                           ;Config register CONFIG3L @ 0x1FFFC
  2843                           ;	External Address Bus Shift Enable bit
  2844                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
  2845                           ;	External Memory Bus
  2846                           ;	MODE = MM, Microcontroller mode, external bus disabled
  2847                           ;	Data Bus Width Select bit
  2848                           ;	BW = 16, 16-Bit Data Width mode
  2849                           ;	External Bus Wait Enable bit
  2850                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
  2851   01FFFC                     	org	131068
  2852   01FFFC  F8                 	db	248
  2853                           
  2854                           ;Config register CONFIG3H @ 0x1FFFD
  2855                           ;	ECCP2 MUX bit
  2856                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
  2857                           ;	ECCP MUX bit
  2858                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
  2859                           ;	Ethernet LED Enable bit
  2860                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
  2861   01FFFD                     	org	131069
  2862   01FFFD  F7                 	db	247
  2863                           tosu	equ	0xFFF
  2864                           tosh	equ	0xFFE
  2865                           tosl	equ	0xFFD
  2866                           stkptr	equ	0xFFC
  2867                           pclatu	equ	0xFFB
  2868                           pclath	equ	0xFFA
  2869                           pcl	equ	0xFF9
  2870                           tblptru	equ	0xFF8
  2871                           tblptrh	equ	0xFF7
  2872                           tblptrl	equ	0xFF6
  2873                           tablat	equ	0xFF5
  2874                           prodh	equ	0xFF4
  2875                           prodl	equ	0xFF3
  2876                           indf0	equ	0xFEF
  2877                           postinc0	equ	0xFEE
  2878                           postdec0	equ	0xFED
  2879                           preinc0	equ	0xFEC
  2880                           plusw0	equ	0xFEB
  2881                           fsr0h	equ	0xFEA
  2882                           fsr0l	equ	0xFE9
  2883                           wreg	equ	0xFE8
  2884                           indf1	equ	0xFE7
  2885                           postinc1	equ	0xFE6
  2886                           postdec1	equ	0xFE5
  2887                           preinc1	equ	0xFE4
  2888                           plusw1	equ	0xFE3
  2889                           fsr1h	equ	0xFE2
  2890                           fsr1l	equ	0xFE1
  2891                           bsr	equ	0xFE0
  2892                           indf2	equ	0xFDF
  2893                           postinc2	equ	0xFDE
  2894                           postdec2	equ	0xFDD
  2895                           preinc2	equ	0xFDC
  2896                           plusw2	equ	0xFDB
  2897                           fsr2h	equ	0xFDA
  2898                           fsr2l	equ	0xFD9
  2899                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     17      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S835$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S782$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S782$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_2x16_WriteMsg@msg	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Init->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteData

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6034
                                             13 BANK0      4     4      0
                  _ADC_GetConversion
                  _LCD_2x16_WriteMsg
                           _Lcd_Init
                  _SYSTEM_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    5525
                                             88 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      67
                                              2 COMRAM     2     2      0
                  _LCD_2x16_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_2x16_WriteMsg                                    3     0      3     353
                                              2 COMRAM     3     0      3
                  _LCD_2x16_WriteCmd
                 _LCD_2x16_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteData                                   2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteCmd                                    2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _LCD_2x16_WriteMsg
     _LCD_2x16_WriteCmd
     _LCD_2x16_WriteData
   _Lcd_Init
     _LCD_2x16_WriteCmd
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      43        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      38       5       35.0%
BITBIGSFR           80      0       0      42        0.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      41        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFR_1h        29      0       0      37        0.0%
BITBIGSFR_1llll     29      0       0      40        0.0%
BITBIGSFR_1lhl      24      0       0      39        0.0%
BITBIGSFR_1lhhh      E      0       0      38        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      97      16        0.0%
DATA                 0      0      97       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 24 14:17:41 2023

                            l13 1B42                              l16 1B4C                              l75 1A98  
                            l97 1B20                             l112 1AB2                             l115 1AD2  
                           l133 19DA                             l136 1868                             l144 1B0A  
                           l139 1908                             l261 1408                             l274 156C  
                           l902 1794                             l910 1996                             l913 1B4E  
                           l825 1A1A                             l851 180E                             l870 1280  
                           l847 17B8                             l856 1092                             l890 1A5A  
                           l858 109A                             l859 10E0                             l883 18BA  
                           l877 16CA                             l887 1A52                             u400 1718  
                           u401 1714                             u410 174E                             u411 174A  
                           u500 141C                             u420 1996                             u501 1418  
                           u421 1992                             u430 1294                             u510 144E  
                           u431 1290                             u511 144A                             u440 12C6  
                           u520 148C                             u600 1038                             u441 12C2  
                           u521 1488                             u530 14B6                             u610 104A  
                           u451 12F0                             u531 14B2                             u611 1046  
                           u460 1314                             u540 14E4                             u380 16DE  
                           u620 1086                             u700 15E6                             u461 1310  
                           u541 14E0                             u381 16DA                             u621 1082  
                           u701 15E2                             u470 133E                             u550 152C  
                           u390 16F0                             u630 10B2                             u710 1606  
                           u471 133A                             u551 1528                             u391 16EC  
                           u631 10AE                             u711 1602                             u480 137E  
                           u560 17A4                             u640 10C8                             u720 18B2  
                           u481 137A                             u561 17A0                             u641 10C4  
                           u721 18AE                             u730 1AC0                             u490 13C8  
                           u570 17FA                             u650 1202                             u731 1ABC  
                           u491 13C4                             u571 17F6                             u651 11FE  
                           u740 1B0A                             u580 1A36                             u660 1220  
                           u741 1B06                             u581 1A32                             u661 121C  
                           u670 123A                             u590 1036                             u671 1236  
                           u591 1030                             u680 124A                             u681 1246  
                           u690 1596                             u691 1592                             u757 19B0  
                           u767 1902                             u777 1828                             u787 1850  
                           u797 185E                             _abs 1A1C                             _pad 1796  
                           wreg 000FE8                            ?_abs 0013                            l1301 12E6  
                          l1311 1330                            l1303 12EA                            l1321 13A0  
                          l1313 133E                            l1305 12F6                            l1401 10B2  
                          l1323 13B2                            l1315 1350                            l1307 1314  
                          l1411 10E8                            l1403 10B8                            l1501 1830  
                          l1317 137E                            l1309 131C                            l1325 13B8  
                          l1341 1440                            l1333 140A                            l1421 1184  
                          l1413 10F0                            l1405 10C8                            l1511 1856  
                          l1503 1836                            l1327 13C8                            l1319 139E  
                          l1351 14A8                            l1343 144E                            l1335 140E  
                          l1271 16F0                            l1431 124A                            l1415 10F6  
                          l1423 11E8                            l1407 10D4                            l1513 1858  
                          l1505 183C                            l1521 18D2                            l1329 13E8  
                          l1353 14B6                            l1361 151C                            l1345 146E  
                          l1337 141C                            l1273 16FA                            l1281 1954  
                          l1433 1250                            l1425 1202                            l1417 1178  
                          l1409 10DC                            l1441 1596                            l1601 193C  
                          l1507 184C                            l1531 18FE                            l1523 18D8  
                          l1515 18BE                            l1291 1286                            l1363 152C  
                          l1355 14E4                            l1347 148C                            l1339 143C  
                          l1275 1718                            l1267 16CC                            l1283 1960  
                          l1371 17A4                            l1435 1260                            l1427 1220  
                          l1419 117E                            l1451 15E6                            l1443 15A4  
                          l1509 184E                            l1533 1900                            l1525 18DA  
                          l1517 18C0                            l1293 1294                            l1365 154C  
                          l1357 1504                            l1349 1494                            l1277 174E  
                          l1269 16DE                            l1285 1972                            l1381 17FA  
                          l1373 17B0                            l1429 123A                            l1453 1606  
                          l1445 15B2                            l1541 18B2                            l1527 18F6  
                          l1519 18D0                            l1551 19A6                            l1471 1A80  
                          l1295 12B4                            l1359 1516                            l1383 1A1C  
                          l1287 1976                            l1375 17C4                            l1391 103A  
                          l1455 165C                            l1447 15B6                            l1463 169E  
                          l1439 156E                            l1535 186A                            l1529 18F8  
                          l1561 19D4                            l1553 19BC                            l1481 1A8E  
                          l1473 1A82                            l1545 1B36                            l1297 12B8  
                          l1289 1282                            l1385 1A36                            l1377 17D8  
                          l1369 1796                            l1393 104A                            l1449 15C6  
                          l1537 1876                            l1571 1AC0                            l1491 1812  
                          l1555 19C2                            l1547 1998                            l1483 1A90  
                          l1475 1A88                            l1299 12C6                            l1379 17DC  
                          l1395 106A                            l1387 1006                            l1459 168C  
                          l1539 1892                            l1565 1A9C                            l1493 1814  
                          l1557 19C8                            l1549 19A0                            l1485 1A92  
                          l1477 1A8A                            l1469 1A5C                            l1397 1086  
                          l1389 1026                            l1581 19FE                            l1567 1AAE  
                          l1495 1824                            l1591 1AF2                            l1559 19CE  
                          l1487 1B44                            l1479 1A8C                            l1399 10A2  
                          l1575 19DC                            l1569 1AB0                            l1497 1826  
                          l1585 1AD4                            l1489 1B0C                            l1577 19EE  
                          l1593 190A                            l1499 182E                            l1587 1AE0  
                          l1579 19F6                            l1595 190E                            l1589 1AEE  
                          l1597 1912                            l1599 1920                            ?_pad 0011  
                          STR_1 1001                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            _LATD 000F8C                            _LATE 000F8D  
                          _LATF 000F8E                            _LATG 000F8F                            _LATH 000F90  
                          _LATJ 000F91                            abs@a 0013                            _dbuf 0067  
                          _main 190A                            _dtoa 1006                            _prec 0065  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            start 0002  
                  ___param_bank 000000                           ??_abs 0015                           ??_pad 0017  
 __end_of_OSCILLATOR_Initialize 1B4E                 __end_of___aodiv 140A                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 156E                    vfpfcnvrt@fmt 0041  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                           _TRISF 000F97  
                         _TRISG 000F98                           _TRISH 000F99                           _TRISJ 000F9A  
                         _flags 005F                           _fputc 16CC                           _fputs 1954  
                         pad@fp 0011                           _width 0063                           _putch 1B4E  
                         dtoa@d 001E                           dtoa@i 003C                           dtoa@n 0034  
                         dtoa@p 0030                           dtoa@s 003E                           dtoa@w 0032  
                         tablat 000FF5                           status 000FD8                 __end_of_sprintf 1A1C  
              __end_of_Lcd_Init 19DC                 __initialization 1B22                    __end_of_main 1954  
                  __end_of_dtoa 1282                          ??_main 005F                          ??_dtoa 0026  
                 __activetblptr 000003                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADCON2 000FC0                          ?_fputc 0001                          ?_fputs 000A  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          ?_putch 0001  
                        _OSCCON 000FD3                    vfprintf@cfmt 0057                       ??___aodiv 0011  
                     ??___aomod 0011                          clear_0 1B28                          isa$std 000001  
                        pad@buf 0013                          dtoa@fp 001C                          fputc@c 0001  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8        ADC_GetConversion@channel 0005                          putch@c 0001  
              __end_of_vfprintf 18BC                       ??_sprintf 005F               _SYSTEM_Initialize 1B36  
                    __accesstop 0060         __end_of__initialization 1B30              ?_SYSTEM_Initialize 0001  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 0001  
                 __end_of_fputc 1796                   __end_of_fputs 1998                   __end_of_putch 1B50  
             _LCD_2x16_WriteCmd 1810                       ?_Lcd_Init 0001               _LCD_2x16_WriteMsg 1AD4  
                       ??_fputc 0005       __end_of_SYSTEM_Initialize 1B44                         ??_fputs 000E  
                       ??_putch 0001              ?_LCD_2x16_WriteCmd 0001              ?_LCD_2x16_WriteMsg 0003  
    __end_of_LCD_2x16_WriteData 190A                      __pbssBANK0 0060             ??_LCD_2x16_WriteCmd 0001  
           ??_LCD_2x16_WriteMsg 0006       __end_of_LCD_2x16_WriteCmd 186A       __end_of_LCD_2x16_WriteMsg 1B0C  
                       _OSCTUNE 000F9B                      ??_Lcd_Init 0003            _ADC_InterruptHandler 0060  
                       __Hparam 0000                         __Lparam 0000                         ___aodiv 1282  
                       ___aomod 140A                       ?_vfprintf 0051                    __psmallconst 1000  
                       __pcinit 1B22                         __ramtop 1000            LCD_2x16_WriteMsg@msg 0003  
                       __ptext0 190A                         __ptext1 19DC                         __ptext2 186A  
                       __ptext3 156E                         __ptext4 1006                         __ptext5 1796  
                       __ptext6 1954                         __ptext7 16CC                         __ptext8 1B4E  
                       __ptext9 1A1C           _OSCILLATOR_Initialize 1B44        ??_PIN_MANAGER_Initialize 0001  
      LCD_2x16_WriteCmd@command 0002                         _sprintf 19DC                         main@msg 0096  
          end_of_initialization 1B30                         fputc@fp 0003                         fputs@fp 000C  
             __end_of_vfpfcnvrt 16CC                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                vfpfcnvrt@convarg 0047  
                    ??_vfprintf 0057       LCD_2x16_WriteData@command 0002                       _TRISDbits 000F95  
                   vfpfcnvrt@ap 0043                     vfpfcnvrt@cp 004F                     vfpfcnvrt@fp 003F  
                _ADC_Initialize 1B0C          ?_OSCILLATOR_Initialize 0001             start_initialization 1B22  
                   __end_of_abs 1A5C                     __end_of_pad 1810                     vfprintf@fmt 0053  
            _LCD_2x16_WriteData 18BC          __end_of_ADC_Initialize 1B22             ?_LCD_2x16_WriteData 0001  
                   __pbssCOMRAM 005F                   __pcstackBANK0 0087                ___aodiv@dividend 0001  
          ??_LCD_2x16_WriteData 0001          _PIN_MANAGER_Initialize 1A5C                        ?___aodiv 0001  
                      ?___aomod 0001                ___aodiv@quotient 0013                 ?_ADC_Initialize 0001  
                   __smallconst 1000                        ?_sprintf 0059                        _LATDbits 000F8C  
                     _vfpfcnvrt 156E                      _ADCON0bits 000FC2                      _ADCON1bits 000FC1  
                     main@value 0094                        _Lcd_Init 1998                        __Hrparam 0000  
                    vfprintf@ap 0055                        __Lrparam 0000                      vfprintf@fp 0051  
             _ADC_GetConversion 1A9A         ??_OSCILLATOR_Initialize 0001              ?_ADC_GetConversion 0001  
                    ?_vfpfcnvrt 003F                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
           ??_ADC_GetConversion 0003                      sprintf@fmt 005B                        _dtoa$863 002E  
         LCD_2x16_WriteMsg@line 0005                        __ptext10 140A                        __ptext11 1282  
                      __ptext20 1A9A                        __ptext12 1B36                        __ptext13 1A5C  
                      __ptext14 1B44                        __ptext15 1B0C                        __ptext16 1998  
                      __ptext17 1AD4                        __ptext18 18BC                        __ptext19 1810  
     __end_of_ADC_GetConversion 1AD4                        isa$xinst 000000                        _vfprintf 186A  
              ___aomod@dividend 0001                       sprintf@ap 0087         ?_PIN_MANAGER_Initialize 0001  
              ??_ADC_Initialize 0001                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0045  
               ___aomod@counter 0011                        sprintf@f 0089                        sprintf@s 0059  
                  ___aodiv@sign 0012  __end_of_PIN_MANAGER_Initialize 1A9A                    ___aomod@sign 0012  
